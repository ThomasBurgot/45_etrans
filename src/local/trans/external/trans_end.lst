


NVFORTRAN (Version    20.11)          02/16/2022  17:31:25      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir /gpfslocalsup/spack_soft/openmpi/4.0.5/nvhpc-20.11-3li3t3xykfzndqfr4oxyhh22iqiendl2/include
          -idir /gpfslocalsup/spack_soft/openmpi/4.0.5/nvhpc-20.11-3li3t3xykfzndqfr4oxyhh22iqiendl2/lib
          -inform severe -opt 2 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: trans_end.F90

(    1) SUBROUTINE TRANS_END(CDMODE)
(    2) 
(    3) !**** *TRANS_END* - Terminate transform package
(    4) 
(    5) !     Purpose.
(    6) !     --------
(    7) !     Terminate transform package. Release all allocated arrays.
(    8) 
(    9) !**   Interface.
(   10) !     ----------
(   11) !     CALL TRANS_END
(   12) 
(   13) !     Explicit arguments : None
(   14) !     --------------------
(   15) 
(   16) !     Method.
(   17) !     -------
(   18) 
(   19) !     Externals.  None
(   20) !     ----------
(   21) 
(   22) !     Author.
(   23) !     -------
(   24) !        Mats Hamrud *ECMWF*
(   25) 
(   26) !     Modifications.
(   27) !     --------------
(   28) !        Original : 00-03-03
(   29) !          G. Radnoti: 19-03-2009: intermediate end of transf to allow to switch to mono-task transforms
(   30) !        R. El Khatib 09-Jul-2013 LENABLED
(   31) 






NVFORTRAN (Version    20.11)          02/16/2022  17:31:25      page 2

(   32) !     ------------------------------------------------------------------
(   33) 
(   34) USE PARKIND1  ,ONLY : JPIM, JPRB
(   35) 
(   36) !ifndef INTERFACE
(   37) 
(   38) USE TPM_GEN         ,ONLY : MSETUP0, NCUR_RESOL, NMAX_RESOL, LENABLED,NDEF_RESOL
(   39) USE TPM_DIM         ,ONLY : R, DIM_RESOL, R_NSMAX,R_NTMAX, R_NDGNH, R_NDGL, R_NNOEXTZL
(   40) USE TPM_DISTR       ,ONLY : D, DISTR_RESOL, NPRCIDS,D_NUMP,D_MYMS,D_NSTAGT0B,D_NSTAGT1B,D_NPROCL,D_NPNTGTB1, D_NASM0, &
(   41) & D_NSTAGTF,D_MSTABF,D_NPNTGTB0,D_NPROCM,D_NPTRLS
(   42) USE TPM_GEOMETRY    ,ONLY : G, GEOM_RESOL, G_NDGLU, G_NMEN, G_NMEN_MAX,G_NLOEN, G_NLOEN_MAX
(   43) USE TPM_FIELDS      ,ONLY : F, FIELDS_RESOL,F_RW, ZIA,ZEPSNM,ZSOA1,ZAOA1,ISTAN,ISTAS,ZSIA,ZAIA,ZOA1,ZOA2, &
(   44) & ZAA,ZAS,LDZAA,LDZAS,TDZAA,TDZAS,&
(   45) & IZBA,IZBS,ILDZBA,ILDZBS,ITDZBA,ITDZBS,&
(   46) & IZCA,IZCS,IZCAT,IZCST,ILDZCA,ILDZCS,ITDZCA,ITDZCS,&
(   47) & DZBAT,DZBST,DLDZBA,DLDZBS,DTDZBA,DTDZBS,&
(   48) & DZCA,DZCS,DZCAT,DZCST,DLDZCA,DLDZCS,DTDZCA,DTDZCS
(   49) USE TPM_FFT         ,ONLY : T, FFT_RESOL, TB, FFTB_RESOL
(   50) USE TPM_CTL         ,ONLY : C, CTL_RESOL
(   51) #ifdef WITH_FFTW
(   52) USE TPM_FFTW        ,ONLY : TW, FFTW_RESOL
(   53) #endif
(   54) USE TPM_FLT
(   55) USE TPM_TRANS       ,ONLY : FOUBUF, FOUBUF_IN, ZGTF
(   56) 
(   57) USE EQ_REGIONS_MOD  ,ONLY : N_REGIONS
(   58) USE SET_RESOL_MOD   ,ONLY : SET_RESOL
(   59) USE DEALLOC_RESOL_MOD   ,ONLY : DEALLOC_RESOL
(   60) !
(   61) 
(   62) IMPLICIT NONE
(   63) CHARACTER*5, OPTIONAL,  INTENT(IN) :: CDMODE
(   64) ! Local variables
(   65) INTEGER(KIND=JPIM) :: JRES
(   66) CHARACTER*5 :: CLMODE
(   67) !     ------------------------------------------------------------------
(   68) CLMODE='FINAL'
(   69) IF (PRESENT(CDMODE)) CLMODE=CDMODE
(   70) IF (CLMODE == 'FINAL') THEN
(   71) 
(   72)   DEALLOCATE(ZAA)
(   73)   DEALLOCATE(ZAS)
(   74)   
(   75)   DEALLOCATE(IZBA)
(   76)   DEALLOCATE(IZBS)
(   77)   !DEALLOCATE(IZCA)
(   78)   !DEALLOCATE(IZCS)
(   79)   DEALLOCATE(IZCAT)
(   80)   DEALLOCATE(IZCST)
(   81)   
(   82)   
(   83)   !DEALLOCATE(DZBA)
(   84)   !DEALLOCATE(DZBS)
(   85)   DEALLOCATE(DZBAT)
(   86)   DEALLOCATE(DZBST)
(   87)   !DEALLOCATE(DZCA)
(   88)   !DEALLOCATE(DZCS)
(   89)   DEALLOCATE(DZCAT)






NVFORTRAN (Version    20.11)          02/16/2022  17:31:25      page 3

(   90)   DEALLOCATE(DZCST)
(   91)   
(   92)   !$ACC exit data delete(ZAA,ZAS,IZBA,IZBS,IZCAT,IZCST,DZBAT,DZBST,DZCAT,DZCST)
(   93)   
(   94)   !$ACC exit data delete(FOUBUF_IN,FOUBUF)
(   95)   DEALLOCATE(FOUBUF_IN)
(   96)   DEALLOCATE(FOUBUF)
(   97)   
(   98)   
(   99)   !$ACC exit data delete(ZGTF)
(  100)   DEALLOCATE(ZGTF)
(  101)   
(  102)   DEALLOCATE(ZIA)
(  103)   DEALLOCATE(ZEPSNM)
(  104)   DEALLOCATE(ZSOA1)
(  105)   DEALLOCATE(ZAOA1)
(  106)   DEALLOCATE(ISTAN)
(  107)   DEALLOCATE(ISTAS)
(  108)   DEALLOCATE(ZSIA)
(  109)   DEALLOCATE(ZAIA)
(  110)   DEALLOCATE(ZOA1)
(  111)   !DEALLOCATE(ZOA2)
(  112)   !$ACC exit data delete(ZIA,ZEPSNM,ZSOA1,ZAOA1,ISTAN,ISTAS,ZSIA,ZAIA,ZOA1)
(  113)   
(  114)   DEALLOCATE(D_NSTAGT0B,D_NSTAGT1B,D_NPNTGTB1,D_MYMS,D_NPROCL,D_NASM0,D_NSTAGTF,D_MSTABF,D_NPNTGTB0,D_NPROCM,D_NPTRLS,G_NDGL
(  115)   !$ACC exit data delete(R_NSMAX,R_NTMAX,R_NDGL,R_NNOEXTZL,R_NDGNH,D_NSTAGT0B,D_NSTAGT1B,D_NPNTGTB1,D_NPROCL,D_NUMP,D_MYMS,G
(  116)   
(  117)   !call CUDA_DGEMM_BATCHED_FINALIZE()
(  118) 
(  119)   IF( ALLOCATED( LENABLED ) ) THEN
(  120)     DO JRES=1,NMAX_RESOL
(  121)       IF(LENABLED(JRES)) THEN
(  122)         CALL DEALLOC_RESOL(JRES)
(  123)       ENDIF
(  124)     ENDDO
(  125)     DEALLOCATE(LENABLED)
(  126)   ENDIF
(  127) 
(  128)   NULLIFY(R)
(  129)   IF( ALLOCATED(DIM_RESOL) ) DEALLOCATE(DIM_RESOL)
(  130) 
(  131)   NULLIFY(D)
(  132)   IF( ALLOCATED(DISTR_RESOL) ) DEALLOCATE(DISTR_RESOL)
(  133) 
(  134)   !TPM_FFT
(  135)   NULLIFY(T)
(  136)   IF( ALLOCATED(FFT_RESOL) ) DEALLOCATE(FFT_RESOL)
(  137)   NULLIFY(TB)
(  138)   IF( ALLOCATED(FFTB_RESOL) ) DEALLOCATE(FFTB_RESOL)
(  139) 
(  140) #ifdef WITH_FFTW
(  141)   !TPM_FFTW
(  142)   NULLIFY(TW)
(  143)   IF( ALLOCATED(FFTW_RESOL) ) DEALLOCATE(FFTW_RESOL)
(  144) #endif
(  145) 
(  146)   !TPM_FLT
(  147)   NULLIFY(S)






NVFORTRAN (Version    20.11)          02/16/2022  17:31:25      page 4

(  148)   IF( ALLOCATED(FLT_RESOL) ) DEALLOCATE(FLT_RESOL)
(  149) 
(  150)   !TPM_CTL
(  151)   NULLIFY(C)
(  152)   IF( ALLOCATED(CTL_RESOL) ) DEALLOCATE(CTL_RESOL)
(  153) 
(  154)   !TPM_FIELDS
(  155)   NULLIFY(F)
(  156)   IF( ALLOCATED(FIELDS_RESOL) ) DEALLOCATE(FIELDS_RESOL)
(  157) 
(  158) 
(  159)   !TPM_GEOMETRY
(  160)   NULLIFY(G)
(  161)   IF( ALLOCATED(GEOM_RESOL) ) DEALLOCATE(GEOM_RESOL)
(  162) 
(  163)   !TPM_TRANS
(  164)   IF(ALLOCATED(FOUBUF_IN)) DEALLOCATE(FOUBUF_IN)
(  165)   IF(ALLOCATED(FOUBUF)) DEALLOCATE(FOUBUF)
(  166) 
(  167)   MSETUP0 = 0
(  168)   NMAX_RESOL = 0
(  169)   NCUR_RESOL = 0
(  170)   NDEF_RESOL = 0
(  171) ENDIF
(  172) IF (CLMODE == 'FINAL' .OR. CLMODE == 'INTER') THEN
(  173)   !EQ_REGIONS
(  174)   IF( ASSOCIATED(N_REGIONS) ) DEALLOCATE(N_REGIONS)
(  175)   !TPM_DISTR
(  176)   IF( ALLOCATED(NPRCIDS) ) DEALLOCATE(NPRCIDS)
(  177) ENDIF
(  178) 
(  179) !     ------------------------------------------------------------------
(  180) 
(  181) !endif INTERFACE
(  182) 
(  183) END SUBROUTINE TRANS_END




























NVFORTRAN (Version    20.11)          02/16/2022  17:31:25      page 5

(    1) # 1 "trans_end.F90"
(    1) SUBROUTINE TRANS_END(CDMODE)
(    2) # 3 "trans_end.F90"
(    3) !**** *TRANS_END* - Terminate transform package
(    4) # 5 "trans_end.F90"
(    5) !     Purpose.
(    6) !     --------
(    7) !     Terminate transform package. Release all allocated arrays.
(    8) # 9 "trans_end.F90"
(    9) !**   Interface.
(   10) !     ----------
(   11) !     CALL TRANS_END
(   12) # 13 "trans_end.F90"
(   13) !     Explicit arguments : None
(   14) !     --------------------
(   15) # 16 "trans_end.F90"
(   16) !     Method.
(   17) !     -------
(   18) # 19 "trans_end.F90"
(   19) !     Externals.  None
(   20) !     ----------
(   21) # 22 "trans_end.F90"
(   22) !     Author.
(   23) !     -------
(   24) !        Mats Hamrud *ECMWF*
(   25) # 26 "trans_end.F90"
(   26) !     Modifications.
(   27) !     --------------
(   28) !        Original : 00-03-03
(   29) !          G. Radnoti: 19-03-2009: intermediate end of transf to allow to switch to mono-task transforms
(   30) !        R. El Khatib 09-Jul-2013 LENABLED
(   31) # 32 "trans_end.F90"
(   32) !     ------------------------------------------------------------------
(   33) # 34 "trans_end.F90"
(   34) USE PARKIND1  ,ONLY : JPIM, JPRB
(   35) # 36 "trans_end.F90"
(   36) !ifndef INTERFACE
(   37) # 38 "trans_end.F90"
(   38) USE TPM_GEN         ,ONLY : MSETUP0, NCUR_RESOL, NMAX_RESOL, LENABLED,NDEF_RESOL
(   39) USE TPM_DIM         ,ONLY : R, DIM_RESOL, R_NSMAX,R_NTMAX, R_NDGNH, R_NDGL, R_NNOEXTZL
(   40) USE TPM_DISTR       ,ONLY : D, DISTR_RESOL, NPRCIDS,D_NUMP,D_MYMS,D_NSTAGT0B,D_NSTAGT1B,D_NPROCL,D_NPNTGTB1, D_NASM0, &
(   41) & D_NSTAGTF,D_MSTABF,D_NPNTGTB0,D_NPROCM,D_NPTRLS
(   42) USE TPM_GEOMETRY    ,ONLY : G, GEOM_RESOL, G_NDGLU, G_NMEN, G_NMEN_MAX,G_NLOEN, G_NLOEN_MAX
(   43) USE TPM_FIELDS      ,ONLY : F, FIELDS_RESOL,F_RW, ZIA,ZEPSNM,ZSOA1,ZAOA1,ISTAN,ISTAS,ZSIA,ZAIA,ZOA1,ZOA2, &
(   44) & ZAA,ZAS,LDZAA,LDZAS,TDZAA,TDZAS,&
(   45) & IZBA,IZBS,ILDZBA,ILDZBS,ITDZBA,ITDZBS,&
(   46) & IZCA,IZCS,IZCAT,IZCST,ILDZCA,ILDZCS,ITDZCA,ITDZCS,&
(   47) & DZBAT,DZBST,DLDZBA,DLDZBS,DTDZBA,DTDZBS,&
(   48) & DZCA,DZCS,DZCAT,DZCST,DLDZCA,DLDZCS,DTDZCA,DTDZCS
(   49) USE TPM_FFT         ,ONLY : T, FFT_RESOL, TB, FFTB_RESOL
(   50) USE TPM_CTL         ,ONLY : C, CTL_RESOL
(   51) # 54 "trans_end.F90"
(   54) USE TPM_FLT
(   55) USE TPM_TRANS       ,ONLY : FOUBUF, FOUBUF_IN, ZGTF
(   56) # 57 "trans_end.F90"
(   57) USE EQ_REGIONS_MOD  ,ONLY : N_REGIONS
(   58) USE SET_RESOL_MOD   ,ONLY : SET_RESOL
(   59) USE DEALLOC_RESOL_MOD   ,ONLY : DEALLOC_RESOL






NVFORTRAN (Version    20.11)          02/16/2022  17:31:25      page 6

(   60) !
(   61) # 62 "trans_end.F90"
(   62) IMPLICIT NONE
(   63) CHARACTER*5, OPTIONAL,  INTENT(IN) :: CDMODE
(   64) ! Local variables
(   65) INTEGER(KIND=JPIM) :: JRES
(   66) CHARACTER*5 :: CLMODE
(   67) !     ------------------------------------------------------------------
(   68) CLMODE='FINAL'
(   69) IF (PRESENT(CDMODE)) CLMODE=CDMODE
(   70) IF (CLMODE == 'FINAL') THEN
(   71) # 72 "trans_end.F90"
(   72)   DEALLOCATE(ZAA)
(   73)   DEALLOCATE(ZAS)
(   74)   
(   75)   DEALLOCATE(IZBA)
(   76)   DEALLOCATE(IZBS)
(   77)   !DEALLOCATE(IZCA)
(   78)   !DEALLOCATE(IZCS)
(   79)   DEALLOCATE(IZCAT)
(   80)   DEALLOCATE(IZCST)
(   81)   
(   82)   
(   83)   !DEALLOCATE(DZBA)
(   84)   !DEALLOCATE(DZBS)
(   85)   DEALLOCATE(DZBAT)
(   86)   DEALLOCATE(DZBST)
(   87)   !DEALLOCATE(DZCA)
(   88)   !DEALLOCATE(DZCS)
(   89)   DEALLOCATE(DZCAT)
(   90)   DEALLOCATE(DZCST)
(   91)   
(   92)   !$ACC exit data delete(ZAA,ZAS,IZBA,IZBS,IZCAT,IZCST,DZBAT,DZBST,DZCAT,DZCST)
(   93)   
(   94)   !$ACC exit data delete(FOUBUF_IN,FOUBUF)
(   95)   DEALLOCATE(FOUBUF_IN)
(   96)   DEALLOCATE(FOUBUF)
(   97)   
(   98)   
(   99)   !$ACC exit data delete(ZGTF)
(  100)   DEALLOCATE(ZGTF)
(  101)   
(  102)   DEALLOCATE(ZIA)
(  103)   DEALLOCATE(ZEPSNM)
(  104)   DEALLOCATE(ZSOA1)
(  105)   DEALLOCATE(ZAOA1)
(  106)   DEALLOCATE(ISTAN)
(  107)   DEALLOCATE(ISTAS)
(  108)   DEALLOCATE(ZSIA)
(  109)   DEALLOCATE(ZAIA)
(  110)   DEALLOCATE(ZOA1)
(  111)   !DEALLOCATE(ZOA2)
(  112)   !$ACC exit data delete(ZIA,ZEPSNM,ZSOA1,ZAOA1,ISTAN,ISTAS,ZSIA,ZAIA,ZOA1)
(  113)   
(  114)   DEALLOCATE(D_NSTAGT0B,D_NSTAGT1B,D_NPNTGTB1,D_MYMS,D_NPROCL,D_NASM0,D_NSTAGTF,D_MSTABF,D_NPNTGTB0,D_NPROCM,D_NPTRLS,G_NDGLU,G_NMEN,G_NLOEN,F_RW)
(  115)   !$ACC exit data delete(R_NSMAX,R_NTMAX,R_NDGL,R_NNOEXTZL,R_NDGNH,D_NSTAGT0B,D_NSTAGT1B,D_NPNTGTB1,D_NPROCL,D_NUMP,D_MYMS,G_NDGLU,G_NMEN,G_NMEN_MAX,G_NLOEN,G_NLOEN_MAX,D_NSTAGTF,D_MSTABF,D_NPNTGTB0,D_NPROCM,D_NPTRLS,D_NASM0,F_RW)
(  116)   
(  117)   !call CUDA_DGEMM_BATCHED_FINALIZE()






NVFORTRAN (Version    20.11)          02/16/2022  17:31:25      page 7

(  118) # 119 "trans_end.F90"
(  119)   IF( ALLOCATED( LENABLED ) ) THEN
(  120)     DO JRES=1,NMAX_RESOL
(  121)       IF(LENABLED(JRES)) THEN
(  122)         CALL DEALLOC_RESOL(JRES)
(  123)       ENDIF
(  124)     ENDDO
(  125)     DEALLOCATE(LENABLED)
(  126)   ENDIF
(  127) # 128 "trans_end.F90"
(  128)   NULLIFY(R)
(  129)   IF( ALLOCATED(DIM_RESOL) ) DEALLOCATE(DIM_RESOL)
(  130) # 131 "trans_end.F90"
(  131)   NULLIFY(D)
(  132)   IF( ALLOCATED(DISTR_RESOL) ) DEALLOCATE(DISTR_RESOL)
(  133) # 134 "trans_end.F90"
(  134)   !TPM_FFT
(  135)   NULLIFY(T)
(  136)   IF( ALLOCATED(FFT_RESOL) ) DEALLOCATE(FFT_RESOL)
(  137)   NULLIFY(TB)
(  138)   IF( ALLOCATED(FFTB_RESOL) ) DEALLOCATE(FFTB_RESOL)
(  139) # 146 "trans_end.F90"
(  146)   !TPM_FLT
(  147)   NULLIFY(S)
(  148)   IF( ALLOCATED(FLT_RESOL) ) DEALLOCATE(FLT_RESOL)
(  149) # 150 "trans_end.F90"
(  150)   !TPM_CTL
(  151)   NULLIFY(C)
(  152)   IF( ALLOCATED(CTL_RESOL) ) DEALLOCATE(CTL_RESOL)
(  153) # 154 "trans_end.F90"
(  154)   !TPM_FIELDS
(  155)   NULLIFY(F)
(  156)   IF( ALLOCATED(FIELDS_RESOL) ) DEALLOCATE(FIELDS_RESOL)
(  157) # 159 "trans_end.F90"
(  159)   !TPM_GEOMETRY
(  160)   NULLIFY(G)
(  161)   IF( ALLOCATED(GEOM_RESOL) ) DEALLOCATE(GEOM_RESOL)
(  162) # 163 "trans_end.F90"
(  163)   !TPM_TRANS
(  164)   IF(ALLOCATED(FOUBUF_IN)) DEALLOCATE(FOUBUF_IN)
(  165)   IF(ALLOCATED(FOUBUF)) DEALLOCATE(FOUBUF)
(  166) # 167 "trans_end.F90"
(  167)   MSETUP0 = 0
(  168)   NMAX_RESOL = 0
(  169)   NCUR_RESOL = 0
(  170)   NDEF_RESOL = 0
(  171) ENDIF
(  172) IF (CLMODE == 'FINAL' .OR. CLMODE == 'INTER') THEN
(  173)   !EQ_REGIONS
(  174)   IF( ASSOCIATED(N_REGIONS) ) DEALLOCATE(N_REGIONS)
(  175)   !TPM_DISTR
(  176)   IF( ALLOCATED(NPRCIDS) ) DEALLOCATE(NPRCIDS)
(  177) ENDIF
(  178) # 179 "trans_end.F90"
(  179) !     ------------------------------------------------------------------
(  180) # 181 "trans_end.F90"
(  181) !endif INTERFACE
(  182) # 183 "trans_end.F90"






NVFORTRAN (Version    20.11)          02/16/2022  17:31:25      page 8

(  183) END SUBROUTINE TRANS_END
