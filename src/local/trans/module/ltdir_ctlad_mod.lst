


NVFORTRAN (Version    20.11)          02/16/2022  17:46:21      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir /gpfslocalsup/spack_soft/openmpi/4.0.5/nvhpc-20.11-3li3t3xykfzndqfr4oxyhh22iqiendl2/include
          -idir /gpfslocalsup/spack_soft/openmpi/4.0.5/nvhpc-20.11-3li3t3xykfzndqfr4oxyhh22iqiendl2/lib
          -inform severe -opt 2 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: ltdir_ctlad_mod.F90

(    1) MODULE LTDIR_CTLAD_MOD
(    2) CONTAINS
(    3) SUBROUTINE LTDIR_CTLAD(KF_FS,KF_UV,KF_SCALARS, &
(    4)  & PSPVOR,PSPDIV,PSPSCALAR, &
(    5)  & PSPSC3A,PSPSC3B,PSPSC2, &
(    6)  & KFLDPTRUV,KFLDPTRSC)
(    7) 
(    8) !**** *LTDIR_CTLAD* - Control routine for direct Legendre transform
(    9) 
(   10) !     Purpose.
(   11) !     --------
(   12) !        Direct Legendre transform
(   13) 
(   14) !**   Interface.
(   15) !     ----------
(   16) !     CALL LTDIR_CTLAD(...)
(   17) 
(   18) !     Explicit arguments :
(   19) !     --------------------
(   20) !     PSPVOR(:,:) - spectral vorticity (output)
(   21) !     PSPDIV(:,:) - spectral divergence (output)
(   22) !     PSPSCALAR(:,:) - spectral scalarvalued fields (output)
(   23) 
(   24) !     ------------------------------------------------------------------
(   25) 
(   26) USE PARKIND1  ,ONLY : JPIM     ,JPRBT ,JPRB
(   27) 
(   28) USE TPM_GEN         ,ONLY : LALLOPERM
(   29) !USE TPM_DIM
(   30) USE TPM_TRANS       ,ONLY : FOUBUF, FOUBUF_IN
(   31) USE TPM_DISTR       ,ONLY : D
(   32) 
(   33) USE LTDIRAD_MOD     ,ONLY : LTDIRAD






NVFORTRAN (Version    20.11)          02/16/2022  17:46:21      page 2

(   34) USE TRMTOL_MOD      ,ONLY : TRMTOL
(   35) !
(   36) 
(   37) IMPLICIT NONE
(   38) 
(   39) INTEGER(KIND=JPIM),INTENT(IN) :: KF_FS,KF_UV,KF_SCALARS
(   40) REAL(KIND=JPRB) ,OPTIONAL, INTENT(INOUT) :: PSPVOR(:,:)
(   41) REAL(KIND=JPRB) ,OPTIONAL, INTENT(INOUT) :: PSPDIV(:,:)
(   42) REAL(KIND=JPRB) ,OPTIONAL, INTENT(INOUT) :: PSPSCALAR(:,:)
(   43) REAL(KIND=JPRB) ,OPTIONAL, INTENT(INOUT) :: PSPSC3A(:,:,:)
(   44) REAL(KIND=JPRB) ,OPTIONAL, INTENT(INOUT) :: PSPSC3B(:,:,:)
(   45) REAL(KIND=JPRB) ,OPTIONAL, INTENT(INOUT) :: PSPSC2(:,:)
(   46) INTEGER(KIND=JPIM),OPTIONAL,INTENT(IN)   :: KFLDPTRUV(:)
(   47) INTEGER(KIND=JPIM),OPTIONAL,INTENT(IN)   :: KFLDPTRSC(:)
(   48) 
(   49) INTEGER(KIND=JPIM) :: JM,IM,IBLEN,ILED2
(   50) 
(   51) !     ------------------------------------------------------------------
(   52) 
(   53) ! Transposition from Fourier space distribution to spectral space distribution
(   54) 
(   55) CALL GSTATS(105,0)
(   56) IBLEN = D%NLENGT0B*2*KF_FS
(   57) IF (ALLOCATED(FOUBUF_IN)) THEN
(   58)   IF (MAX(1,IBLEN) > SIZE(FOUBUF_IN)) THEN
(   59)     DEALLOCATE(FOUBUF_IN)
(   60)     ALLOCATE(FOUBUF_IN(MAX(1,IBLEN)))
(   61)   ENDIF
(   62) ELSE
(   63)   ALLOCATE(FOUBUF_IN(MAX(1,IBLEN)))
(   64) ENDIF
(   65) IF (ALLOCATED(FOUBUF)) THEN
(   66)   IF (MAX(1,IBLEN) > SIZE(FOUBUF)) THEN
(   67)     DEALLOCATE(FOUBUF)
(   68)     ALLOCATE(FOUBUF(MAX(1,IBLEN)))
(   69)   ENDIF
(   70) ELSE
(   71)   ALLOCATE(FOUBUF(MAX(1,IBLEN)))
(   72) ENDIF
(   73) 
(   74) ! Direct Legendre transform
(   75) 
(   76) ILED2 = 2*KF_FS
(   77) CALL GSTATS(1646,0)
(   78) IF(KF_FS > 0) THEN
(   79) !$OMP PARALLEL DO SCHEDULE(DYNAMIC,1) PRIVATE(JM,IM)
(   80)   DO JM=1,D%NUMP
(   81)     IM = D%MYMS(JM)
(   82)     CALL LTDIRAD(IM,JM,KF_FS,KF_UV,KF_SCALARS,ILED2, &
(   83)      & PSPVOR,PSPDIV,PSPSCALAR,&
(   84)      & PSPSC3A,PSPSC3B,PSPSC2 , &
(   85)      & KFLDPTRUV,KFLDPTRSC)
(   86)   ENDDO
(   87) !$OMP END PARALLEL DO
(   88) ENDIF
(   89) CALL GSTATS(1646,1)
(   90) 
(   91) CALL GSTATS(105,1)






NVFORTRAN (Version    20.11)          02/16/2022  17:46:21      page 3

(   92) 
(   93) CALL GSTATS(181,0)
(   94) CALL TRMTOL(FOUBUF,FOUBUF_IN,2*KF_FS)
(   95) CALL GSTATS(181,1)
(   96) IF (.NOT.LALLOPERM) DEALLOCATE(FOUBUF)
(   97) !     ------------------------------------------------------------------
(   98) 
(   99) END SUBROUTINE LTDIR_CTLAD
(  100) END MODULE LTDIR_CTLAD_MOD























































NVFORTRAN (Version    20.11)          02/16/2022  17:46:21      page 4

(    1) # 1 "ltdir_ctlad_mod.F90"
(    1) MODULE LTDIR_CTLAD_MOD
(    2) CONTAINS
(    3) SUBROUTINE LTDIR_CTLAD(KF_FS,KF_UV,KF_SCALARS, &
(    4)  & PSPVOR,PSPDIV,PSPSCALAR, &
(    5)  & PSPSC3A,PSPSC3B,PSPSC2, &
(    6)  & KFLDPTRUV,KFLDPTRSC)
(    7) # 8 "ltdir_ctlad_mod.F90"
(    8) !**** *LTDIR_CTLAD* - Control routine for direct Legendre transform
(    9) # 10 "ltdir_ctlad_mod.F90"
(   10) !     Purpose.
(   11) !     --------
(   12) !        Direct Legendre transform
(   13) # 14 "ltdir_ctlad_mod.F90"
(   14) !**   Interface.
(   15) !     ----------
(   16) !     CALL LTDIR_CTLAD(...)
(   17) # 18 "ltdir_ctlad_mod.F90"
(   18) !     Explicit arguments :
(   19) !     --------------------
(   20) !     PSPVOR(:,:) - spectral vorticity (output)
(   21) !     PSPDIV(:,:) - spectral divergence (output)
(   22) !     PSPSCALAR(:,:) - spectral scalarvalued fields (output)
(   23) # 24 "ltdir_ctlad_mod.F90"
(   24) !     ------------------------------------------------------------------
(   25) # 26 "ltdir_ctlad_mod.F90"
(   26) USE PARKIND1  ,ONLY : JPIM     ,JPRBT ,JPRB
(   27) # 28 "ltdir_ctlad_mod.F90"
(   28) USE TPM_GEN         ,ONLY : LALLOPERM
(   29) !USE TPM_DIM
(   30) USE TPM_TRANS       ,ONLY : FOUBUF, FOUBUF_IN
(   31) USE TPM_DISTR       ,ONLY : D
(   32) # 33 "ltdir_ctlad_mod.F90"
(   33) USE LTDIRAD_MOD     ,ONLY : LTDIRAD
(   34) USE TRMTOL_MOD      ,ONLY : TRMTOL
(   35) !
(   36) # 37 "ltdir_ctlad_mod.F90"
(   37) IMPLICIT NONE
(   38) # 39 "ltdir_ctlad_mod.F90"
(   39) INTEGER(KIND=JPIM),INTENT(IN) :: KF_FS,KF_UV,KF_SCALARS
(   40) REAL(KIND=JPRB) ,OPTIONAL, INTENT(INOUT) :: PSPVOR(:,:)
(   41) REAL(KIND=JPRB) ,OPTIONAL, INTENT(INOUT) :: PSPDIV(:,:)
(   42) REAL(KIND=JPRB) ,OPTIONAL, INTENT(INOUT) :: PSPSCALAR(:,:)
(   43) REAL(KIND=JPRB) ,OPTIONAL, INTENT(INOUT) :: PSPSC3A(:,:,:)
(   44) REAL(KIND=JPRB) ,OPTIONAL, INTENT(INOUT) :: PSPSC3B(:,:,:)
(   45) REAL(KIND=JPRB) ,OPTIONAL, INTENT(INOUT) :: PSPSC2(:,:)
(   46) INTEGER(KIND=JPIM),OPTIONAL,INTENT(IN)   :: KFLDPTRUV(:)
(   47) INTEGER(KIND=JPIM),OPTIONAL,INTENT(IN)   :: KFLDPTRSC(:)
(   48) # 49 "ltdir_ctlad_mod.F90"
(   49) INTEGER(KIND=JPIM) :: JM,IM,IBLEN,ILED2
(   50) # 51 "ltdir_ctlad_mod.F90"
(   51) !     ------------------------------------------------------------------
(   52) # 53 "ltdir_ctlad_mod.F90"
(   53) ! Transposition from Fourier space distribution to spectral space distribution
(   54) # 55 "ltdir_ctlad_mod.F90"
(   55) CALL GSTATS(105,0)
(   56) IBLEN = D%NLENGT0B*2*KF_FS
(   57) IF (ALLOCATED(FOUBUF_IN)) THEN






NVFORTRAN (Version    20.11)          02/16/2022  17:46:21      page 5

(   58)   IF (MAX(1,IBLEN) > SIZE(FOUBUF_IN)) THEN
(   59)     DEALLOCATE(FOUBUF_IN)
(   60)     ALLOCATE(FOUBUF_IN(MAX(1,IBLEN)))
(   61)   ENDIF
(   62) ELSE
(   63)   ALLOCATE(FOUBUF_IN(MAX(1,IBLEN)))
(   64) ENDIF
(   65) IF (ALLOCATED(FOUBUF)) THEN
(   66)   IF (MAX(1,IBLEN) > SIZE(FOUBUF)) THEN
(   67)     DEALLOCATE(FOUBUF)
(   68)     ALLOCATE(FOUBUF(MAX(1,IBLEN)))
(   69)   ENDIF
(   70) ELSE
(   71)   ALLOCATE(FOUBUF(MAX(1,IBLEN)))
(   72) ENDIF
(   73) # 74 "ltdir_ctlad_mod.F90"
(   74) ! Direct Legendre transform
(   75) # 76 "ltdir_ctlad_mod.F90"
(   76) ILED2 = 2*KF_FS
(   77) CALL GSTATS(1646,0)
(   78) IF(KF_FS > 0) THEN
(   79) !$OMP PARALLEL DO SCHEDULE(DYNAMIC,1) PRIVATE(JM,IM)
(   80)   DO JM=1,D%NUMP
(   81)     IM = D%MYMS(JM)
(   82)     CALL LTDIRAD(IM,JM,KF_FS,KF_UV,KF_SCALARS,ILED2, &
(   83)      & PSPVOR,PSPDIV,PSPSCALAR,&
(   84)      & PSPSC3A,PSPSC3B,PSPSC2 , &
(   85)      & KFLDPTRUV,KFLDPTRSC)
(   86)   ENDDO
(   87) !$OMP END PARALLEL DO
(   88) ENDIF
(   89) CALL GSTATS(1646,1)
(   90) # 91 "ltdir_ctlad_mod.F90"
(   91) CALL GSTATS(105,1)
(   92) # 93 "ltdir_ctlad_mod.F90"
(   93) CALL GSTATS(181,0)
(   94) CALL TRMTOL(FOUBUF,FOUBUF_IN,2*KF_FS)
(   95) CALL GSTATS(181,1)
(   96) IF (.NOT.LALLOPERM) DEALLOCATE(FOUBUF)
(   97) !     ------------------------------------------------------------------
(   98) # 99 "ltdir_ctlad_mod.F90"
(   99) END SUBROUTINE LTDIR_CTLAD
(  100) END MODULE LTDIR_CTLAD_MOD
