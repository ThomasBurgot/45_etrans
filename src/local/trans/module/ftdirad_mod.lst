


NVFORTRAN (Version    20.11)          02/16/2022  17:29:24      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir /gpfslocalsup/spack_soft/openmpi/4.0.5/nvhpc-20.11-3li3t3xykfzndqfr4oxyhh22iqiendl2/include
          -idir /gpfslocalsup/spack_soft/openmpi/4.0.5/nvhpc-20.11-3li3t3xykfzndqfr4oxyhh22iqiendl2/lib
          -inform severe -opt 2 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: ftdirad_mod.F90

(    1) MODULE FTDIRAD_MOD
(    2) CONTAINS
(    3) SUBROUTINE FTDIRAD(PREEL,KFIELDS,KGL)
(    4) 
(    5) 
(    6) !**** *FTDIRAD - Direct Fourier transform
(    7) 
(    8) !     Purpose. Routine for Grid-point to Fourier transform - adjoint
(    9) !     --------
(   10) 
(   11) !**   Interface.
(   12) !     ----------
(   13) !        CALL FTDIRAD(..)
(   14) 
(   15) !        Explicit arguments :  PREEL   - Fourier/grid-point array
(   16) !        --------------------  KFIELDS - number of fields
(   17) 
(   18) !     Method.
(   19) !     -------
(   20) 
(   21) !     Externals.  FFT992 - FFT routine
(   22) !     ----------
(   23) !
(   24) 
(   25) !     Author.
(   26) !     -------
(   27) !        Mats Hamrud *ECMWF*
(   28) 
(   29) !     Modifications.
(   30) !     --------------
(   31) !        Original : 00-03-03






NVFORTRAN (Version    20.11)          02/16/2022  17:29:24      page 2

(   32) !        D. Degrauwe  (Feb 2012): Alternative extension zone (E')
(   33) !        G. Mozdzynski (Oct 2014): support for FFTW transforms
(   34) !        G. Mozdzynski (Jun 2015): Support alternative FFTs to FFTW 
(   35) 
(   36) !     ------------------------------------------------------------------
(   37) 
(   38) USE PARKIND1  ,ONLY : JPIM, JPRBT
(   39) 
(   40) USE TPM_DISTR       ,ONLY : D, MYSETW
(   41) USE TPM_GEOMETRY    ,ONLY : G
(   42) USE TPM_FFT         ,ONLY : T, TB
(   43) USE BLUESTEIN_MOD   ,ONLY : BLUESTEIN_FFT
(   44) #ifdef WITH_FFTW
(   45) USE TPM_FFTW        ,ONLY : TW, EXEC_FFTW
(   46) #endif
(   47) USE TPM_DIM         ,ONLY : R
(   48) 
(   49) IMPLICIT NONE
(   50) 
(   51) INTEGER(KIND=JPIM),INTENT(IN)  :: KFIELDS,KGL
(   52) REAL(KIND=JPRBT), INTENT(INOUT) :: PREEL(:,:)
(   53) 
(   54) INTEGER(KIND=JPIM) :: IGLG,IST,ILEN,IJUMP,JJ,JF,ILOEN
(   55) INTEGER(KIND=JPIM) :: IOFF,IRLEN,ICLEN,ITYPE
(   56) REAL(KIND=JPRBT) :: ZMUL
(   57) LOGICAL :: LL_ALL=.FALSE. ! T=do kfields ffts in one batch, F=do kfields ffts one at a time
(   58) !     ------------------------------------------------------------------
(   59) 
(   60) ITYPE = 1
(   61) IJUMP = 1
(   62) IGLG  = D%NPTRLS(MYSETW)+KGL-1
(   63) IST   = 2*(G%NMEN(IGLG)+1)+1
(   64) ILOEN = G%NLOEN(IGLG)+R%NNOEXTZL
(   65) ILEN  = ILOEN+3-IST
(   66) IOFF  = D%NSTAGTF(KGL)+1
(   67) IRLEN = ILOEN
(   68) ICLEN = (IRLEN/2+1)*2
(   69) 
(   70) DO JJ=1,ILEN
(   71)   DO JF=1,KFIELDS
(   72)     PREEL(JF,IST+IOFF-1+JJ-1) = 0.0_JPRBT
(   73)   ENDDO
(   74) ENDDO
(   75) 
(   76) #ifdef WITH_FFTW
(   77) IF( .NOT. TW%LFFTW )THEN
(   78) #endif
(   79) 
(   80)   IF( T%LUSEFFT992(KGL) )THEN
(   81) 
(   82)     CALL FFT992(PREEL(1,IOFF),T%TRIGS(1,KGL),&
(   83)      &T%NFAX(1,KGL),KFIELDS,IJUMP,ILOEN,KFIELDS,ITYPE)
(   84) 
(   85)   ELSE
(   86)   
(   87)     CALL BLUESTEIN_FFT(TB,ILOEN,ITYPE,KFIELDS,PREEL(1:KFIELDS,IOFF:IOFF+ICLEN-1))
(   88) 
(   89)   ENDIF






NVFORTRAN (Version    20.11)          02/16/2022  17:29:24      page 3

(   90) 
(   91) #ifdef WITH_FFTW
(   92) ELSE
(   93) 
(   94) !  CALL EXEC_FFTW(ITYPE,IRLEN,ICLEN,IOFF,KFIELDS,LL_ALL,PREEL)
(   95) 
(   96) ENDIF
(   97) #endif
(   98) 
(   99)   ! Change of metric (not in forward routine)
(  100) 
(  101) ZMUL = 1.0_JPRBT/ILOEN
(  102) DO JJ=1,ILOEN
(  103)   DO JF=1,KFIELDS
(  104)     PREEL(JF,IOFF-1+JJ) = PREEL(JF,IOFF-1+JJ)*ZMUL
(  105)   ENDDO
(  106) ENDDO
(  107) 
(  108) !     ------------------------------------------------------------------
(  109) 
(  110) END SUBROUTINE FTDIRAD
(  111) END MODULE FTDIRAD_MOD










































NVFORTRAN (Version    20.11)          02/16/2022  17:29:24      page 4

(    1) # 1 "ftdirad_mod.F90"
(    1) MODULE FTDIRAD_MOD
(    2) CONTAINS
(    3) SUBROUTINE FTDIRAD(PREEL,KFIELDS,KGL)
(    4) # 6 "ftdirad_mod.F90"
(    6) !**** *FTDIRAD - Direct Fourier transform
(    7) # 8 "ftdirad_mod.F90"
(    8) !     Purpose. Routine for Grid-point to Fourier transform - adjoint
(    9) !     --------
(   10) # 11 "ftdirad_mod.F90"
(   11) !**   Interface.
(   12) !     ----------
(   13) !        CALL FTDIRAD(..)
(   14) # 15 "ftdirad_mod.F90"
(   15) !        Explicit arguments :  PREEL   - Fourier/grid-point array
(   16) !        --------------------  KFIELDS - number of fields
(   17) # 18 "ftdirad_mod.F90"
(   18) !     Method.
(   19) !     -------
(   20) # 21 "ftdirad_mod.F90"
(   21) !     Externals.  FFT992 - FFT routine
(   22) !     ----------
(   23) !
(   24) # 25 "ftdirad_mod.F90"
(   25) !     Author.
(   26) !     -------
(   27) !        Mats Hamrud *ECMWF*
(   28) # 29 "ftdirad_mod.F90"
(   29) !     Modifications.
(   30) !     --------------
(   31) !        Original : 00-03-03
(   32) !        D. Degrauwe  (Feb 2012): Alternative extension zone (E')
(   33) !        G. Mozdzynski (Oct 2014): support for FFTW transforms
(   34) !        G. Mozdzynski (Jun 2015): Support alternative FFTs to FFTW 
(   35) # 36 "ftdirad_mod.F90"
(   36) !     ------------------------------------------------------------------
(   37) # 38 "ftdirad_mod.F90"
(   38) USE PARKIND1  ,ONLY : JPIM, JPRBT
(   39) # 40 "ftdirad_mod.F90"
(   40) USE TPM_DISTR       ,ONLY : D, MYSETW
(   41) USE TPM_GEOMETRY    ,ONLY : G
(   42) USE TPM_FFT         ,ONLY : T, TB
(   43) USE BLUESTEIN_MOD   ,ONLY : BLUESTEIN_FFT
(   44) # 47 "ftdirad_mod.F90"
(   47) USE TPM_DIM         ,ONLY : R
(   48) # 49 "ftdirad_mod.F90"
(   49) IMPLICIT NONE
(   50) # 51 "ftdirad_mod.F90"
(   51) INTEGER(KIND=JPIM),INTENT(IN)  :: KFIELDS,KGL
(   52) REAL(KIND=JPRBT), INTENT(INOUT) :: PREEL(:,:)
(   53) # 54 "ftdirad_mod.F90"
(   54) INTEGER(KIND=JPIM) :: IGLG,IST,ILEN,IJUMP,JJ,JF,ILOEN
(   55) INTEGER(KIND=JPIM) :: IOFF,IRLEN,ICLEN,ITYPE
(   56) REAL(KIND=JPRBT) :: ZMUL
(   57) LOGICAL :: LL_ALL=.FALSE. ! T=do kfields ffts in one batch, F=do kfields ffts one at a time
(   58) !     ------------------------------------------------------------------
(   59) # 60 "ftdirad_mod.F90"
(   60) ITYPE = 1






NVFORTRAN (Version    20.11)          02/16/2022  17:29:24      page 5

(   61) IJUMP = 1
(   62) IGLG  = D%NPTRLS(MYSETW)+KGL-1
(   63) IST   = 2*(G%NMEN(IGLG)+1)+1
(   64) ILOEN = G%NLOEN(IGLG)+R%NNOEXTZL
(   65) ILEN  = ILOEN+3-IST
(   66) IOFF  = D%NSTAGTF(KGL)+1
(   67) IRLEN = ILOEN
(   68) ICLEN = (IRLEN/2+1)*2
(   69) # 70 "ftdirad_mod.F90"
(   70) DO JJ=1,ILEN
(   71)   DO JF=1,KFIELDS
(   72)     PREEL(JF,IST+IOFF-1+JJ-1) = 0.0_JPRBT
(   73)   ENDDO
(   74) ENDDO
(   75) # 80 "ftdirad_mod.F90"
(   80)   IF( T%LUSEFFT992(KGL) )THEN
(   81) # 82 "ftdirad_mod.F90"
(   82)     CALL FFT992(PREEL(1,IOFF),T%TRIGS(1,KGL),&
(   83)      &T%NFAX(1,KGL),KFIELDS,IJUMP,ILOEN,KFIELDS,ITYPE)
(   84) # 85 "ftdirad_mod.F90"
(   85)   ELSE
(   86)   
(   87)     CALL BLUESTEIN_FFT(TB,ILOEN,ITYPE,KFIELDS,PREEL(1:KFIELDS,IOFF:IOFF+ICLEN-1))
(   88) # 89 "ftdirad_mod.F90"
(   89)   ENDIF
(   90) # 99 "ftdirad_mod.F90"
(   99)   ! Change of metric (not in forward routine)
(  100) # 101 "ftdirad_mod.F90"
(  101) ZMUL = 1.0_JPRBT/ILOEN
(  102) DO JJ=1,ILOEN
(  103)   DO JF=1,KFIELDS
(  104)     PREEL(JF,IOFF-1+JJ) = PREEL(JF,IOFF-1+JJ)*ZMUL
(  105)   ENDDO
(  106) ENDDO
(  107) # 108 "ftdirad_mod.F90"
(  108) !     ------------------------------------------------------------------
(  109) # 110 "ftdirad_mod.F90"
(  110) END SUBROUTINE FTDIRAD
(  111) END MODULE FTDIRAD_MOD
