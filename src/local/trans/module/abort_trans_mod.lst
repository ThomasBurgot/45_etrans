


NVFORTRAN (Version    20.11)          02/16/2022  17:28:52      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir /gpfslocalsup/spack_soft/openmpi/4.0.5/nvhpc-20.11-3li3t3xykfzndqfr4oxyhh22iqiendl2/include
          -idir /gpfslocalsup/spack_soft/openmpi/4.0.5/nvhpc-20.11-3li3t3xykfzndqfr4oxyhh22iqiendl2/lib
          -inform severe -opt 2 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: abort_trans_mod.F90

(    1) MODULE ABORT_TRANS_MOD
(    2) CONTAINS
(    3) SUBROUTINE ABORT_TRANS(CDTEXT)
(    4) 
(    5) USE TPM_GEN  , ONLY : NOUT,NERR
(    6) USE TPM_DISTR, ONLY : NPROC,MYPROC
(    7) USE MPL_MODULE, ONLY : MPL_ABORT
(    8) USE SDL_MOD, ONLY : SDL_TRACEBACK, SDL_SRLABORT
(    9) 
(   10) IMPLICIT NONE
(   11) 
(   12) 
(   13) CHARACTER(LEN=*),INTENT(IN) :: CDTEXT
(   14) 
(   15) WRITE(NOUT,'(1X,A)') 'ABORT_TRANS CALLED'
(   16) 
(   17) WRITE(NOUT,'(1X,A)') CDTEXT
(   18) WRITE(NERR,'(1X,A,1X,I3,1X,A)') 'ABORT! ',MYPROC,CDTEXT
(   19) CLOSE(NOUT)
(   20) IF (NPROC > 1) THEN
(   21)   CALL MPL_ABORT(CDTEXT)
(   22) ELSE
(   23)   CALL SDL_TRACEBACK
(   24)   CALL FLUSH(0)
(   25)   CALL SDL_SRLABORT
(   26) ENDIF
(   27) 
(   28) END SUBROUTINE ABORT_TRANS
(   29) END MODULE ABORT_TRANS_MOD










NVFORTRAN (Version    20.11)          02/16/2022  17:28:52      page 2

(    1) # 1 "abort_trans_mod.F90"
(    1) MODULE ABORT_TRANS_MOD
(    2) CONTAINS
(    3) SUBROUTINE ABORT_TRANS(CDTEXT)
(    4) # 5 "abort_trans_mod.F90"
(    5) USE TPM_GEN  , ONLY : NOUT,NERR
(    6) USE TPM_DISTR, ONLY : NPROC,MYPROC
(    7) USE MPL_MODULE, ONLY : MPL_ABORT
(    8) USE SDL_MOD, ONLY : SDL_TRACEBACK, SDL_SRLABORT
(    9) # 10 "abort_trans_mod.F90"
(   10) IMPLICIT NONE
(   11) # 13 "abort_trans_mod.F90"
(   13) CHARACTER(LEN=*),INTENT(IN) :: CDTEXT
(   14) # 15 "abort_trans_mod.F90"
(   15) WRITE(NOUT,'(1X,A)') 'ABORT_TRANS CALLED'
(   16) # 17 "abort_trans_mod.F90"
(   17) WRITE(NOUT,'(1X,A)') CDTEXT
(   18) WRITE(NERR,'(1X,A,1X,I3,1X,A)') 'ABORT! ',MYPROC,CDTEXT
(   19) CLOSE(NOUT)
(   20) IF (NPROC > 1) THEN
(   21)   CALL MPL_ABORT(CDTEXT)
(   22) ELSE
(   23)   CALL SDL_TRACEBACK
(   24)   CALL FLUSH(0)
(   25)   CALL SDL_SRLABORT
(   26) ENDIF
(   27) # 28 "abort_trans_mod.F90"
(   28) END SUBROUTINE ABORT_TRANS
(   29) END MODULE ABORT_TRANS_MOD
