


NVFORTRAN (Version    20.11)          02/16/2022  17:29:25      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir /gpfslocalsup/spack_soft/openmpi/4.0.5/nvhpc-20.11-3li3t3xykfzndqfr4oxyhh22iqiendl2/include
          -idir /gpfslocalsup/spack_soft/openmpi/4.0.5/nvhpc-20.11-3li3t3xykfzndqfr4oxyhh22iqiendl2/lib
          -inform severe -opt 2 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: fspgl_int_mod.F90

(    1) MODULE FSPGL_INT_MOD
(    2) CONTAINS
(    3) SUBROUTINE FSPGL_INT(KF_UV,KF_SCALARS,KF_SCDERS,KF_OUT_LT,&
(    4)  & FSPGL_PROC,KFLDPTRUV,KFLDPTRSC)
(    5) 
(    6) USE PARKIND1  ,ONLY : JPIM     ,JPRBT
(    7) 
(    8) USE TPM_DIM         ,ONLY : R
(    9) USE TPM_TRANS       ,ONLY : FOUBUF_IN, LDIVGP, LVORGP
(   10) USE TPM_GEOMETRY    ,ONLY : G
(   11) USE TPM_DISTR       ,ONLY : D,D_NUMP,D_MYMS,D_NASM0
(   12) USE TPM_FIELDS      ,ONLY : F
(   13) USE ABORT_TRANS_MOD ,ONLY : ABORT_TRANS
(   14) !
(   15) 
(   16) IMPLICIT NONE
(   17) 
(   18) INTEGER(KIND=JPIM) :: KM, KMLOC
(   19) INTEGER(KIND=JPIM), INTENT(IN) :: KF_UV,KF_SCALARS,KF_SCDERS,KF_OUT_LT
(   20) EXTERNAL  FSPGL_PROC
(   21) INTEGER(KIND=JPIM),OPTIONAL,INTENT(IN)  :: KFLDPTRUV(:)
(   22) INTEGER(KIND=JPIM),OPTIONAL,INTENT(IN)  :: KFLDPTRSC(:)
(   23) 
(   24) !
(   25) ! ZFIELD 2nd dimension is extended from 0 to R%NDGL+1, while only 1 to R%NDGL
(   26) ! is given from the north/south transforms, and only 1 to R%NDGL rows will be
(   27) ! passed to the east/west transforms.
(   28) ! the 2 extra rows are used inside the model Fourier space computations
(   29) ! (outside the transform package - see FSPGLH in Arpege/IFS).
(   30) !
(   31) REAL(KIND=JPRBT) :: ZFIELD(2*KF_OUT_LT,0:R%NDGL+1)






NVFORTRAN (Version    20.11)          02/16/2022  17:29:25      page 2

(   32) 
(   33) 
(   34) INTEGER(KIND=JPIM) :: ISL, IGLS, JFLD, JGL ,IPROC,  IPROCS
(   35) INTEGER(KIND=JPIM) :: IPTRU,IST,J
(   36) INTEGER(KIND=JPIM) :: IDGNH,IDGL
(   37) INTEGER(KIND=JPIM) :: ISTAN(R%NDGNH),ISTAS(R%NDGNH)
(   38) INTEGER(KIND=JPIM) :: IFLDPTRUV(KF_UV),IFLDPTRSC(KF_SCALARS)
(   39) !     ------------------------------------------------------------------
(   40) !$acc data if(present(KFLDPTRUV)) COPYIN(KFLDPTRUV,KFLDPTRSC)
(   41) !$acc data create(IFLDPTRUV,IFLDPTRSC,ISTAN,ISTAS,ZFIELD) &
(   42) !$acc& present(d_myms,D%NSTAGT0B,D%NPNTGTB1,D%NPROCL,FOUBUF_IN)
(   43) IF(PRESENT(KFLDPTRUV)) THEN
(   44)   IFLDPTRUV(:) = KFLDPTRUV(1:KF_UV)
(   45)   IFLDPTRSC(:) = KFLDPTRSC(1:KF_SCALARS)
(   46) ELSE
(   47)   DO J=1,KF_UV
(   48)     IFLDPTRUV(J) = J
(   49)   ENDDO
(   50)   DO J=1,KF_SCALARS
(   51)     IFLDPTRSC(J) = J
(   52)   ENDDO
(   53) ENDIF
(   54) 
(   55) !loop over wavenumber
(   56) !!$acc loop
(   57) DO KMLOC=1,D_NUMP
(   58)   KM = D_MYMS(KMLOC)
(   59)  
(   60) ISL = MAX(R%NDGNH-G%NDGLU(KM)+1,1)
(   61) IDGNH = R%NDGNH
(   62) IDGL = R%NDGL
(   63) !$acc parallel loop
(   64) DO JGL=ISL,IDGNH
(   65)   IPROC = D%NPROCL(JGL)
(   66)   ISTAN(JGL) = (D%NSTAGT0B(IPROC) + D%NPNTGTB1(KMLOC,JGL))*2*KF_OUT_LT
(   67)   IGLS = IDGL+1-JGL
(   68)   IPROCS = D%NPROCL(IGLS)
(   69)   ISTAS(JGL) = (D%NSTAGT0B(IPROCS) + D%NPNTGTB1(KMLOC,IGLS))*2*KF_OUT_LT
(   70) ENDDO
(   71) 
(   72) !$acc parallel loop collapse(2)
(   73) DO JGL=ISL,IDGNH
(   74)   DO JFLD=1,2*KF_OUT_LT
(   75)     IGLS = IDGL+1-JGL
(   76)     ZFIELD(JFLD,JGL)  = FOUBUF_IN(ISTAN(JGL)+JFLD)
(   77)     ZFIELD(JFLD,IGLS) = FOUBUF_IN(ISTAS(JGL)+JFLD)
(   78)   ENDDO
(   79) ENDDO
(   80) 
(   81) IST = 1
(   82) IF(LVORGP) THEN
(   83)   IST = IST+2*KF_UV
(   84) ENDIF
(   85) IF(LDIVGP) THEN
(   86)   IST = IST+2*KF_UV
(   87) ENDIF
(   88) IPTRU = IST
(   89) 






NVFORTRAN (Version    20.11)          02/16/2022  17:29:25      page 3

(   90) 
(   91) 
(   92) 
(   93) CALL FSPGL_PROC(KM,ISL,IDGL,KF_OUT_LT,F%R1MU2,ZFIELD,&
(   94)  &   IPTRU,KF_UV,KF_SCALARS,&
(   95)  &   IFLDPTRUV)
(   96) 
(   97)  !$acc parallel loop collapse(2)
(   98) DO JGL=ISL,IDGNH
(   99)   DO JFLD=1,2*KF_OUT_LT
(  100)     IGLS = IDGL+1-JGL
(  101)     !OCL      NOVREC
(  102)     FOUBUF_IN(ISTAN(JGL)+JFLD) = ZFIELD(JFLD,JGL)
(  103)     FOUBUF_IN(ISTAS(JGL)+JFLD) = ZFIELD(JFLD,IGLS)
(  104)   ENDDO
(  105) ENDDO
(  106) 
(  107) !end loop over wavenumber
(  108) END DO
(  109) 
(  110) !$acc end data
(  111) !$acc end data
(  112) !     ------------------------------------------------------------------
(  113) 
(  114) END SUBROUTINE FSPGL_INT
(  115) END MODULE FSPGL_INT_MOD






































NVFORTRAN (Version    20.11)          02/16/2022  17:29:25      page 4

(    1) # 1 "fspgl_int_mod.F90"
(    1) MODULE FSPGL_INT_MOD
(    2) CONTAINS
(    3) SUBROUTINE FSPGL_INT(KF_UV,KF_SCALARS,KF_SCDERS,KF_OUT_LT,&
(    4)  & FSPGL_PROC,KFLDPTRUV,KFLDPTRSC)
(    5) # 6 "fspgl_int_mod.F90"
(    6) USE PARKIND1  ,ONLY : JPIM     ,JPRBT
(    7) # 8 "fspgl_int_mod.F90"
(    8) USE TPM_DIM         ,ONLY : R
(    9) USE TPM_TRANS       ,ONLY : FOUBUF_IN, LDIVGP, LVORGP
(   10) USE TPM_GEOMETRY    ,ONLY : G
(   11) USE TPM_DISTR       ,ONLY : D,D_NUMP,D_MYMS,D_NASM0
(   12) USE TPM_FIELDS      ,ONLY : F
(   13) USE ABORT_TRANS_MOD ,ONLY : ABORT_TRANS
(   14) !
(   15) # 16 "fspgl_int_mod.F90"
(   16) IMPLICIT NONE
(   17) # 18 "fspgl_int_mod.F90"
(   18) INTEGER(KIND=JPIM) :: KM, KMLOC
(   19) INTEGER(KIND=JPIM), INTENT(IN) :: KF_UV,KF_SCALARS,KF_SCDERS,KF_OUT_LT
(   20) EXTERNAL  FSPGL_PROC
(   21) INTEGER(KIND=JPIM),OPTIONAL,INTENT(IN)  :: KFLDPTRUV(:)
(   22) INTEGER(KIND=JPIM),OPTIONAL,INTENT(IN)  :: KFLDPTRSC(:)
(   23) # 24 "fspgl_int_mod.F90"
(   24) !
(   25) ! ZFIELD 2nd dimension is extended from 0 to R%NDGL+1, while only 1 to R%NDGL
(   26) ! is given from the north/south transforms, and only 1 to R%NDGL rows will be
(   27) ! passed to the east/west transforms.
(   28) ! the 2 extra rows are used inside the model Fourier space computations
(   29) ! (outside the transform package - see FSPGLH in Arpege/IFS).
(   30) !
(   31) REAL(KIND=JPRBT) :: ZFIELD(2*KF_OUT_LT,0:R%NDGL+1)
(   32) # 34 "fspgl_int_mod.F90"
(   34) INTEGER(KIND=JPIM) :: ISL, IGLS, JFLD, JGL ,IPROC,  IPROCS
(   35) INTEGER(KIND=JPIM) :: IPTRU,IST,J
(   36) INTEGER(KIND=JPIM) :: IDGNH,IDGL
(   37) INTEGER(KIND=JPIM) :: ISTAN(R%NDGNH),ISTAS(R%NDGNH)
(   38) INTEGER(KIND=JPIM) :: IFLDPTRUV(KF_UV),IFLDPTRSC(KF_SCALARS)
(   39) !     ------------------------------------------------------------------
(   40) !$acc data if(present(KFLDPTRUV)) COPYIN(KFLDPTRUV,KFLDPTRSC)
(   42) !$acc& present(d_myms,D%NSTAGT0B,D%NPNTGTB1,D%NPROCL,FOUBUF_IN)
(   43) IF(PRESENT(KFLDPTRUV)) THEN
(   44)   IFLDPTRUV(:) = KFLDPTRUV(1:KF_UV)
(   45)   IFLDPTRSC(:) = KFLDPTRSC(1:KF_SCALARS)
(   46) ELSE
(   47)   DO J=1,KF_UV
(   48)     IFLDPTRUV(J) = J
(   49)   ENDDO
(   50)   DO J=1,KF_SCALARS
(   51)     IFLDPTRSC(J) = J
(   52)   ENDDO
(   53) ENDIF
(   54) # 55 "fspgl_int_mod.F90"
(   55) !loop over wavenumber
(   56) !!$acc loop
(   57) DO KMLOC=1,D_NUMP
(   58)   KM = D_MYMS(KMLOC)
(   59)  






NVFORTRAN (Version    20.11)          02/16/2022  17:29:25      page 5

(   60) ISL = MAX(R%NDGNH-G%NDGLU(KM)+1,1)
(   61) IDGNH = R%NDGNH
(   62) IDGL = R%NDGL
(   63) !$acc parallel loop
(   64) DO JGL=ISL,IDGNH
(   65)   IPROC = D%NPROCL(JGL)
(   66)   ISTAN(JGL) = (D%NSTAGT0B(IPROC) + D%NPNTGTB1(KMLOC,JGL))*2*KF_OUT_LT
(   67)   IGLS = IDGL+1-JGL
(   68)   IPROCS = D%NPROCL(IGLS)
(   69)   ISTAS(JGL) = (D%NSTAGT0B(IPROCS) + D%NPNTGTB1(KMLOC,IGLS))*2*KF_OUT_LT
(   70) ENDDO
(   71) # 72 "fspgl_int_mod.F90"
(   72) !$acc parallel loop collapse(2)
(   73) DO JGL=ISL,IDGNH
(   74)   DO JFLD=1,2*KF_OUT_LT
(   75)     IGLS = IDGL+1-JGL
(   76)     ZFIELD(JFLD,JGL)  = FOUBUF_IN(ISTAN(JGL)+JFLD)
(   77)     ZFIELD(JFLD,IGLS) = FOUBUF_IN(ISTAS(JGL)+JFLD)
(   78)   ENDDO
(   79) ENDDO
(   80) # 81 "fspgl_int_mod.F90"
(   81) IST = 1
(   82) IF(LVORGP) THEN
(   83)   IST = IST+2*KF_UV
(   84) ENDIF
(   85) IF(LDIVGP) THEN
(   86)   IST = IST+2*KF_UV
(   87) ENDIF
(   88) IPTRU = IST
(   89) # 93 "fspgl_int_mod.F90"
(   93) CALL FSPGL_PROC(KM,ISL,IDGL,KF_OUT_LT,F%R1MU2,ZFIELD,&
(   94)  &   IPTRU,KF_UV,KF_SCALARS,&
(   95)  &   IFLDPTRUV)
(   96) # 97 "fspgl_int_mod.F90"
(   97)  !$acc parallel loop collapse(2)
(   98) DO JGL=ISL,IDGNH
(   99)   DO JFLD=1,2*KF_OUT_LT
(  100)     IGLS = IDGL+1-JGL
(  101)     !OCL      NOVREC
(  102)     FOUBUF_IN(ISTAN(JGL)+JFLD) = ZFIELD(JFLD,JGL)
(  103)     FOUBUF_IN(ISTAS(JGL)+JFLD) = ZFIELD(JFLD,IGLS)
(  104)   ENDDO
(  105) ENDDO
(  106) # 107 "fspgl_int_mod.F90"
(  107) !end loop over wavenumber
(  108) END DO
(  109) # 110 "fspgl_int_mod.F90"
(  110) !$acc end data
(  111) !$acc end data
(  112) !     ------------------------------------------------------------------
(  113) # 114 "fspgl_int_mod.F90"
(  114) END SUBROUTINE FSPGL_INT
(  115) END MODULE FSPGL_INT_MOD
