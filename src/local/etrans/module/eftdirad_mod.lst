


NVFORTRAN (Version    20.11)          02/16/2022  17:29:00      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir /gpfslocalsup/spack_soft/openmpi/4.0.5/nvhpc-20.11-3li3t3xykfzndqfr4oxyhh22iqiendl2/include
          -idir /gpfslocalsup/spack_soft/openmpi/4.0.5/nvhpc-20.11-3li3t3xykfzndqfr4oxyhh22iqiendl2/lib
          -inform severe -opt 2 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: eftdirad_mod.F90

(    1) MODULE EFTDIRAD_MOD
(    2) CONTAINS
(    3) SUBROUTINE EFTDIRAD(PREEL,KFIELDS,KGL)
(    4) 
(    5) !**** *EFTDIRAD - Direct Fourier transform
(    6) 
(    7) !     Purpose. Routine for Grid-point to Fourier transform - adjoint
(    8) !     --------
(    9) 
(   10) !**   Interface.
(   11) !     ----------
(   12) !        CALL EFTDIRAD(..)
(   13) 
(   14) !        Explicit arguments :  PREEL   - Fourier/grid-point array
(   15) !        --------------------  KFIELDS - number of fields
(   16) 
(   17) !     Method.
(   18) !     -------
(   19) 
(   20) !     Externals.  FFT992 - FFT routine
(   21) !     ----------
(   22) 
(   23) !     Author.
(   24) !     -------
(   25) !        Mats Hamrud *ECMWF*
(   26) 
(   27) !     Modifications.
(   28) !     --------------
(   29) !        Original : 00-03-03
(   30) !        M.Hamrud      01-Oct-2003 CY28 Cleaning
(   31) !        R. El Khatib 01-Sep-2015 support for FFTW transforms






NVFORTRAN (Version    20.11)          02/16/2022  17:29:00      page 2

(   32) 
(   33) !     ------------------------------------------------------------------
(   34) 
(   35) USE PARKIND1  ,ONLY : JPIM, JPRB
(   36) USE YOMHOOK   ,ONLY : LHOOK,   DR_HOOK
(   37) 
(   38) USE TPM_DISTR       ,ONLY : D, MYSETW
(   39) !USE TPM_TRANS
(   40) USE TPM_GEOMETRY    ,ONLY : G
(   41) USE TPM_FFT         ,ONLY : T, TB
(   42) USE BLUESTEIN_MOD   ,ONLY : BLUESTEIN_FFT
(   43) #ifdef WITH_FFTW
(   44) USE TPM_FFTW        ,ONLY : TW, EXEC_FFTW
(   45) #endif
(   46) USE TPM_DIM         ,ONLY : R
(   47) USE ABORT_TRANS_MOD ,ONLY : ABORT_TRANS
(   48) 
(   49) IMPLICIT NONE
(   50) 
(   51) INTEGER(KIND=JPIM),INTENT(IN)  :: KFIELDS,KGL
(   52) REAL(KIND=JPRB), INTENT(INOUT) :: PREEL(:,:)
(   53) 
(   54) INTEGER(KIND=JPIM) :: IGLG,IST,ILEN,IJUMP,JJ,JF,ILOEN
(   55) INTEGER(KIND=JPIM) :: IOFF,IRLEN,ICLEN,ITYPE
(   56) LOGICAL :: LL_ALL=.FALSE. ! T=do kfields ffts in one batch, F=do kfields ffts one at a time
(   57) REAL(KIND=JPRB) :: ZNORM
(   58) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   59) !     ------------------------------------------------------------------
(   60) 
(   61) IF (LHOOK) CALL DR_HOOK('EFTDIRAD_MOD:EFTDIRAD',0,ZHOOK_HANDLE)
(   62) 
(   63) ITYPE = 1
(   64) IJUMP = 1
(   65) IGLG = D%NPTRLS(MYSETW)+KGL-1
(   66) ILOEN = G%NLOEN(IGLG)
(   67) IST  = 2*(G%NMEN(IGLG)+1)+1
(   68) ILEN = ILOEN+3-IST
(   69) IOFF  = D%NSTAGTF(KGL)+1
(   70) 
(   71) DO JJ=1,ILEN
(   72)   DO JF=1,KFIELDS
(   73)     PREEL(JF,IST+IOFF-1+JJ-1) = 0.0_JPRB
(   74)   ENDDO
(   75) ENDDO
(   76) DO JJ=1,1
(   77)   DO JF=1,KFIELDS
(   78)     PREEL(JF,IOFF-1+JJ) = 2.0_JPRB * PREEL(JF,IOFF-1+JJ)
(   79)   ENDDO
(   80) ENDDO
(   81) 
(   82) #ifdef WITH_FFTW
(   83) IF( .NOT. TW%LFFTW )THEN
(   84) #endif
(   85) 
(   86)   IF( T%LUSEFFT992(KGL) )THEN
(   87) 
(   88)     CALL FFT992(PREEL(1,IOFF),T%TRIGS(1,KGL),&
(   89)      &T%NFAX(1,KGL),KFIELDS,IJUMP,ILOEN,KFIELDS,ITYPE)






NVFORTRAN (Version    20.11)          02/16/2022  17:29:00      page 3

(   90) 
(   91)   ELSE
(   92)   
(   93)     CALL BLUESTEIN_FFT(TB,ILOEN,ITYPE,KFIELDS,PREEL(1:KFIELDS,IOFF:IOFF+ICLEN-1))
(   94) 
(   95)   ENDIF
(   96) 
(   97) #ifdef WITH_FFTW
(   98) ELSE
(   99) 
(  100)   IRLEN=G%NLOEN(IGLG)+R%NNOEXTZL
(  101)   ICLEN=(IRLEN/2+1)*2
(  102)   CALL EXEC_FFTW(ITYPE,IRLEN,ICLEN,IOFF,KFIELDS,LL_ALL,PREEL)
(  103) 
(  104) ENDIF
(  105) #endif
(  106) 
(  107) 
(  108)   ! Change of metric (not in forward routine)
(  109) ZNORM=1.0_JPRB/(2.0_JPRB*REAL(ILOEN,JPRB))
(  110) DO JJ=1,ILOEN
(  111)   DO JF=1,KFIELDS
(  112)     PREEL(JF,IOFF-1+JJ) = ZNORM * PREEL(JF,IOFF-1+JJ)
(  113)   ENDDO
(  114) ENDDO
(  115) IF (LHOOK) CALL DR_HOOK('EFTDIRAD_MOD:EFTDIRAD',1,ZHOOK_HANDLE)
(  116) 
(  117) !     ------------------------------------------------------------------
(  118) 
(  119) END SUBROUTINE EFTDIRAD
(  120) END MODULE EFTDIRAD_MOD

































NVFORTRAN (Version    20.11)          02/16/2022  17:29:00      page 4

(    1) # 1 "eftdirad_mod.F90"
(    1) MODULE EFTDIRAD_MOD
(    2) CONTAINS
(    3) SUBROUTINE EFTDIRAD(PREEL,KFIELDS,KGL)
(    4) # 5 "eftdirad_mod.F90"
(    5) !**** *EFTDIRAD - Direct Fourier transform
(    6) # 7 "eftdirad_mod.F90"
(    7) !     Purpose. Routine for Grid-point to Fourier transform - adjoint
(    8) !     --------
(    9) # 10 "eftdirad_mod.F90"
(   10) !**   Interface.
(   11) !     ----------
(   12) !        CALL EFTDIRAD(..)
(   13) # 14 "eftdirad_mod.F90"
(   14) !        Explicit arguments :  PREEL   - Fourier/grid-point array
(   15) !        --------------------  KFIELDS - number of fields
(   16) # 17 "eftdirad_mod.F90"
(   17) !     Method.
(   18) !     -------
(   19) # 20 "eftdirad_mod.F90"
(   20) !     Externals.  FFT992 - FFT routine
(   21) !     ----------
(   22) # 23 "eftdirad_mod.F90"
(   23) !     Author.
(   24) !     -------
(   25) !        Mats Hamrud *ECMWF*
(   26) # 27 "eftdirad_mod.F90"
(   27) !     Modifications.
(   28) !     --------------
(   29) !        Original : 00-03-03
(   30) !        M.Hamrud      01-Oct-2003 CY28 Cleaning
(   31) !        R. El Khatib 01-Sep-2015 support for FFTW transforms
(   32) # 33 "eftdirad_mod.F90"
(   33) !     ------------------------------------------------------------------
(   34) # 35 "eftdirad_mod.F90"
(   35) USE PARKIND1  ,ONLY : JPIM, JPRB
(   36) USE YOMHOOK   ,ONLY : LHOOK,   DR_HOOK
(   37) # 38 "eftdirad_mod.F90"
(   38) USE TPM_DISTR       ,ONLY : D, MYSETW
(   39) !USE TPM_TRANS
(   40) USE TPM_GEOMETRY    ,ONLY : G
(   41) USE TPM_FFT         ,ONLY : T, TB
(   42) USE BLUESTEIN_MOD   ,ONLY : BLUESTEIN_FFT
(   43) # 46 "eftdirad_mod.F90"
(   46) USE TPM_DIM         ,ONLY : R
(   47) USE ABORT_TRANS_MOD ,ONLY : ABORT_TRANS
(   48) # 49 "eftdirad_mod.F90"
(   49) IMPLICIT NONE
(   50) # 51 "eftdirad_mod.F90"
(   51) INTEGER(KIND=JPIM),INTENT(IN)  :: KFIELDS,KGL
(   52) REAL(KIND=JPRB), INTENT(INOUT) :: PREEL(:,:)
(   53) # 54 "eftdirad_mod.F90"
(   54) INTEGER(KIND=JPIM) :: IGLG,IST,ILEN,IJUMP,JJ,JF,ILOEN
(   55) INTEGER(KIND=JPIM) :: IOFF,IRLEN,ICLEN,ITYPE
(   56) LOGICAL :: LL_ALL=.FALSE. ! T=do kfields ffts in one batch, F=do kfields ffts one at a time
(   57) REAL(KIND=JPRB) :: ZNORM
(   58) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   59) !     ------------------------------------------------------------------






NVFORTRAN (Version    20.11)          02/16/2022  17:29:00      page 5

(   60) # 61 "eftdirad_mod.F90"
(   61) IF (LHOOK) CALL DR_HOOK('EFTDIRAD_MOD:EFTDIRAD',0,ZHOOK_HANDLE)
(   62) # 63 "eftdirad_mod.F90"
(   63) ITYPE = 1
(   64) IJUMP = 1
(   65) IGLG = D%NPTRLS(MYSETW)+KGL-1
(   66) ILOEN = G%NLOEN(IGLG)
(   67) IST  = 2*(G%NMEN(IGLG)+1)+1
(   68) ILEN = ILOEN+3-IST
(   69) IOFF  = D%NSTAGTF(KGL)+1
(   70) # 71 "eftdirad_mod.F90"
(   71) DO JJ=1,ILEN
(   72)   DO JF=1,KFIELDS
(   73)     PREEL(JF,IST+IOFF-1+JJ-1) = 0.0_JPRB
(   74)   ENDDO
(   75) ENDDO
(   76) DO JJ=1,1
(   77)   DO JF=1,KFIELDS
(   78)     PREEL(JF,IOFF-1+JJ) = 2.0_JPRB * PREEL(JF,IOFF-1+JJ)
(   79)   ENDDO
(   80) ENDDO
(   81) # 86 "eftdirad_mod.F90"
(   86)   IF( T%LUSEFFT992(KGL) )THEN
(   87) # 88 "eftdirad_mod.F90"
(   88)     CALL FFT992(PREEL(1,IOFF),T%TRIGS(1,KGL),&
(   89)      &T%NFAX(1,KGL),KFIELDS,IJUMP,ILOEN,KFIELDS,ITYPE)
(   90) # 91 "eftdirad_mod.F90"
(   91)   ELSE
(   92)   
(   93)     CALL BLUESTEIN_FFT(TB,ILOEN,ITYPE,KFIELDS,PREEL(1:KFIELDS,IOFF:IOFF+ICLEN-1))
(   94) # 95 "eftdirad_mod.F90"
(   95)   ENDIF
(   96) # 108 "eftdirad_mod.F90"
(  108)   ! Change of metric (not in forward routine)
(  109) ZNORM=1.0_JPRB/(2.0_JPRB*REAL(ILOEN,JPRB))
(  110) DO JJ=1,ILOEN
(  111)   DO JF=1,KFIELDS
(  112)     PREEL(JF,IOFF-1+JJ) = ZNORM * PREEL(JF,IOFF-1+JJ)
(  113)   ENDDO
(  114) ENDDO
(  115) IF (LHOOK) CALL DR_HOOK('EFTDIRAD_MOD:EFTDIRAD',1,ZHOOK_HANDLE)
(  116) # 117 "eftdirad_mod.F90"
(  117) !     ------------------------------------------------------------------
(  118) # 119 "eftdirad_mod.F90"
(  119) END SUBROUTINE EFTDIRAD
(  120) END MODULE EFTDIRAD_MOD
