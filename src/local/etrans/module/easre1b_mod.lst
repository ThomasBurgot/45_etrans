


NVFORTRAN (Version    20.11)          02/16/2022  17:27:42      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir /gpfslocalsup/spack_soft/openmpi/4.0.5/nvhpc-20.11-3li3t3xykfzndqfr4oxyhh22iqiendl2/include
          -idir /gpfslocalsup/spack_soft/openmpi/4.0.5/nvhpc-20.11-3li3t3xykfzndqfr4oxyhh22iqiendl2/lib
          -inform severe -opt 2 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: easre1b_mod.F90

(    1) MODULE EASRE1B_MOD
(    2) CONTAINS
(    3) SUBROUTINE EASRE1B(KFIELD,PFFT)
(    4) 
(    5) USE PARKIND1  ,ONLY : JPIM     ,JPRB
(    6) USE YOMHOOK   ,ONLY : LHOOK,   DR_HOOK
(    7) 
(    8) USE TPM_DIM         ,ONLY : R, R_NDGL
(    9) USE TPM_TRANS       ,ONLY : FOUBUF_IN
(   10) USE TPM_DISTR       ,ONLY : D, D_NUMP, D_NSTAGT0B, D_NPNTGTB1, D_NPROCL
(   11) 
(   12) !**** *ASRE1B* - Recombine antisymmetric and symmetric parts
(   13) 
(   14) !     Purpose.
(   15) !     --------
(   16) !        To recombine the antisymmetric and symmetric parts of the
(   17) !        Fourier arrays and update the correct parts of the state
(   18) !        variables.
(   19) 
(   20) !**   Interface.
(   21) !     ----------
(   22) !        *CALL* *ASRE1B(..)
(   23) 
(   24) !        Explicit arguments :
(   25) !        -------------------   KFIELD - number of fields (input-c)
(   26) !                              KM - zonal wavenumber(input-c)
(   27) !                              KMLOC - local version of KM (input-c)
(   28) !                              PAOA - antisymmetric part of Fourier
(   29) !                              fields for zonal wavenumber KM (input)
(   30) !                              PSOA - symmetric part of Fourier
(   31) !                              fields for zonal wavenumber KM (input)
(   32) 
(   33) !        Implicit arguments :  FOUBUF_IN - output buffer (output)






NVFORTRAN (Version    20.11)          02/16/2022  17:27:42      page 2

(   34) !        --------------------
(   35) 
(   36) !     Method.
(   37) !     -------
(   38) 
(   39) !     Externals.   None.
(   40) !     ----------
(   41) 
(   42) !     Reference.
(   43) !     ----------
(   44) !        ECMWF Research Department documentation of the IFS
(   45) 
(   46) !     Author.
(   47) !     -------
(   48) !        Mats Hamrud and Philippe Courtier  *ECMWF*
(   49) 
(   50) !     Modifications.
(   51) !     --------------
(   52) !        Original : 00-02-01 From ASRE1B in IFS CY22R1
(   53) !        M.Hamrud      01-Oct-2003 CY28 Cleaning
(   54) 
(   55) !     ------------------------------------------------------------------
(   56) 
(   57) IMPLICIT NONE
(   58) 
(   59) INTEGER(KIND=JPIM), INTENT(IN) :: KFIELD
(   60) REAL(KIND=JPRB), INTENT(IN)    :: PFFT(:,:,:)
(   61) 
(   62) INTEGER(KIND=JPIM) :: JFLD, JGL ,IPROC
(   63) INTEGER(KIND=JPIM) :: IISTAN
(   64) INTEGER(KIND=JPIM) :: JM
(   65) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   66) !     ------------------------------------------------------------------
(   67) 
(   68) !*       1.    RECOMBINATION  OF SYMMETRIC AND ANTSYMMETRIC PARTS.
(   69) !              ---------------------------------------------------
(   70) 
(   71) 
(   72) IF (LHOOK) CALL DR_HOOK('EASRE1B_MOD:EASRE1B',0,ZHOOK_HANDLE)
(   73) 
(   74) 
(   75) !$acc parallel loop private (JM, JGL, JFLD, IPROC, IISTAN) &
(   76) !$acc& present (FOUBUF_IN, PFFT, D_NSTAGT0B, D_NPNTGTB1, D_NPROCL, D_NUMP, R_NDGL) &
(   77) !$acc& tile(1,16,32)
(   78) DO JM = 1, D_NUMP  !100
(   79)   DO JFLD  =1,2*KFIELD !500
(   80)     DO JGL=1,R_NDGL  !400
(   81)       IPROC=D_NPROCL(JGL)
(   82)       IISTAN=(D_NSTAGT0B(IPROC) + D_NPNTGTB1(JM,JGL))*2*KFIELD
(   83)       FOUBUF_IN(IISTAN+JFLD)=PFFT(JGL,JM,JFLD)
(   84)     ENDDO
(   85)   ENDDO
(   86) ENDDO
(   87) !$acc end parallel loop
(   88) 
(   89) IF (LHOOK) CALL DR_HOOK('EASRE1B_MOD:EASRE1B',1,ZHOOK_HANDLE)
(   90) !     ------------------------------------------------------------------
(   91) 






NVFORTRAN (Version    20.11)          02/16/2022  17:27:42      page 3

(   92) END SUBROUTINE EASRE1B
(   93) END MODULE EASRE1B_MOD






























































NVFORTRAN (Version    20.11)          02/16/2022  17:27:42      page 4

(    1) # 1 "easre1b_mod.F90"
(    1) MODULE EASRE1B_MOD
(    2) CONTAINS
(    3) SUBROUTINE EASRE1B(KFIELD,PFFT)
(    4) # 5 "easre1b_mod.F90"
(    5) USE PARKIND1  ,ONLY : JPIM     ,JPRB
(    6) USE YOMHOOK   ,ONLY : LHOOK,   DR_HOOK
(    7) # 8 "easre1b_mod.F90"
(    8) USE TPM_DIM         ,ONLY : R, R_NDGL
(    9) USE TPM_TRANS       ,ONLY : FOUBUF_IN
(   10) USE TPM_DISTR       ,ONLY : D, D_NUMP, D_NSTAGT0B, D_NPNTGTB1, D_NPROCL
(   11) # 12 "easre1b_mod.F90"
(   12) !**** *ASRE1B* - Recombine antisymmetric and symmetric parts
(   13) # 14 "easre1b_mod.F90"
(   14) !     Purpose.
(   15) !     --------
(   16) !        To recombine the antisymmetric and symmetric parts of the
(   17) !        Fourier arrays and update the correct parts of the state
(   18) !        variables.
(   19) # 20 "easre1b_mod.F90"
(   20) !**   Interface.
(   21) !     ----------
(   22) !        *CALL* *ASRE1B(..)
(   23) # 24 "easre1b_mod.F90"
(   24) !        Explicit arguments :
(   25) !        -------------------   KFIELD - number of fields (input-c)
(   26) !                              KM - zonal wavenumber(input-c)
(   27) !                              KMLOC - local version of KM (input-c)
(   28) !                              PAOA - antisymmetric part of Fourier
(   29) !                              fields for zonal wavenumber KM (input)
(   30) !                              PSOA - symmetric part of Fourier
(   31) !                              fields for zonal wavenumber KM (input)
(   32) # 33 "easre1b_mod.F90"
(   33) !        Implicit arguments :  FOUBUF_IN - output buffer (output)
(   34) !        --------------------
(   35) # 36 "easre1b_mod.F90"
(   36) !     Method.
(   37) !     -------
(   38) # 39 "easre1b_mod.F90"
(   39) !     Externals.   None.
(   40) !     ----------
(   41) # 42 "easre1b_mod.F90"
(   42) !     Reference.
(   43) !     ----------
(   44) !        ECMWF Research Department documentation of the IFS
(   45) # 46 "easre1b_mod.F90"
(   46) !     Author.
(   47) !     -------
(   48) !        Mats Hamrud and Philippe Courtier  *ECMWF*
(   49) # 50 "easre1b_mod.F90"
(   50) !     Modifications.
(   51) !     --------------
(   52) !        Original : 00-02-01 From ASRE1B in IFS CY22R1
(   53) !        M.Hamrud      01-Oct-2003 CY28 Cleaning
(   54) # 55 "easre1b_mod.F90"
(   55) !     ------------------------------------------------------------------
(   56) # 57 "easre1b_mod.F90"
(   57) IMPLICIT NONE






NVFORTRAN (Version    20.11)          02/16/2022  17:27:42      page 5

(   58) # 59 "easre1b_mod.F90"
(   59) INTEGER(KIND=JPIM), INTENT(IN) :: KFIELD
(   60) REAL(KIND=JPRB), INTENT(IN)    :: PFFT(:,:,:)
(   61) # 62 "easre1b_mod.F90"
(   62) INTEGER(KIND=JPIM) :: JFLD, JGL ,IPROC
(   63) INTEGER(KIND=JPIM) :: IISTAN
(   64) INTEGER(KIND=JPIM) :: JM
(   65) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   66) !     ------------------------------------------------------------------
(   67) # 68 "easre1b_mod.F90"
(   68) !*       1.    RECOMBINATION  OF SYMMETRIC AND ANTSYMMETRIC PARTS.
(   69) !              ---------------------------------------------------
(   70) # 72 "easre1b_mod.F90"
(   72) IF (LHOOK) CALL DR_HOOK('EASRE1B_MOD:EASRE1B',0,ZHOOK_HANDLE)
(   73) # 75 "easre1b_mod.F90"
(   76) !$acc& present (FOUBUF_IN, PFFT, D_NSTAGT0B, D_NPNTGTB1, D_NPROCL, D_NUMP, R_NDGL) &
(   77) !$acc& tile(1,16,32)
(   78) DO JM = 1, D_NUMP  !100
(   79)   DO JFLD  =1,2*KFIELD !500
(   80)     DO JGL=1,R_NDGL  !400
(   81)       IPROC=D_NPROCL(JGL)
(   82)       IISTAN=(D_NSTAGT0B(IPROC) + D_NPNTGTB1(JM,JGL))*2*KFIELD
(   83)       FOUBUF_IN(IISTAN+JFLD)=PFFT(JGL,JM,JFLD)
(   84)     ENDDO
(   85)   ENDDO
(   86) ENDDO
(   87) !$acc end parallel loop
(   88) # 89 "easre1b_mod.F90"
(   89) IF (LHOOK) CALL DR_HOOK('EASRE1B_MOD:EASRE1B',1,ZHOOK_HANDLE)
(   90) !     ------------------------------------------------------------------
(   91) # 92 "easre1b_mod.F90"
(   92) END SUBROUTINE EASRE1B
(   93) END MODULE EASRE1B_MOD
