


NVFORTRAN (Version    20.11)          02/16/2022  17:27:44      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir /gpfslocalsup/spack_soft/openmpi/4.0.5/nvhpc-20.11-3li3t3xykfzndqfr4oxyhh22iqiendl2/include
          -idir /gpfslocalsup/spack_soft/openmpi/4.0.5/nvhpc-20.11-3li3t3xykfzndqfr4oxyhh22iqiendl2/lib
          -inform severe -opt 2 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: eprfi2bad_mod.F90

(    1) MODULE EPRFI2BAD_MOD
(    2) CONTAINS
(    3) SUBROUTINE EPRFI2BAD(KFIELD,KM,KMLOC,PFFT)
(    4) 
(    5) !**** *EPRFI2BAD* - Prepare input work arrays for direct transform
(    6) 
(    7) !     Purpose.
(    8) !     --------
(    9) !        To extract the Fourier fields for a specific zonal wavenumber
(   10) !        and put them in an order suitable for the direct Legendre
(   11) !        tranforms, i.e. split into symmetric and anti-symmetric part.
(   12) 
(   13) !**   Interface.
(   14) !     ----------
(   15) !     *CALL* *EPRFI2BAD(..)
(   16) 
(   17) !        Explicit arguments :
(   18) !        -------------------   KFIELD - number of fields
(   19) !                              KM - zonal wavenumber
(   20) !                              KMLOC - local zonal wavenumber
(   21) !                              PAOA - antisymmetric part of Fourier
(   22) !                              fields for zonal wavenumber KM
(   23) !                              PSOA - symmetric part of Fourier
(   24) !                              fields for zonal wavenumber KM
(   25) 
(   26) !        Implicit arguments :  FOUBUF in TPM_TRANS
(   27) !        --------------------
(   28) 
(   29) !     Method.
(   30) !     -------
(   31) 
(   32) !     Externals.   None.
(   33) !     ----------






NVFORTRAN (Version    20.11)          02/16/2022  17:27:44      page 2

(   34) 
(   35) !     Reference.
(   36) !     ----------
(   37) !        ECMWF Research Department documentation of the IFS
(   38) 
(   39) !     Author.
(   40) !     -------
(   41) !        Mats Hamrud and Philippe Courtier  *ECMWF*
(   42) 
(   43) !     Modifications.
(   44) !     --------------
(   45) !        Original : 90-07-01
(   46) !        MPP Group: 95-10-01 Support for Distributed Memory version
(   47) !        Modified : 04/06/99 D.Salmond : change order of AIA and SIA
(   48) !        M.Hamrud      01-Oct-2003 CY28 Cleaning
(   49) !     ------------------------------------------------------------------
(   50) 
(   51) USE PARKIND1  ,ONLY : JPIM     ,JPRB
(   52) USE YOMHOOK   ,ONLY : LHOOK,   DR_HOOK
(   53) 
(   54) USE TPM_DIM         ,ONLY : R
(   55) !USE TPMALD_DIM      ,ONLY : RALD
(   56) USE TPM_TRANS       ,ONLY : FOUBUF
(   57) !USE TPM_GEOMETRY
(   58) USE TPM_DISTR       ,ONLY : D
(   59) !
(   60) 
(   61) IMPLICIT NONE
(   62) 
(   63) INTEGER(KIND=JPIM),INTENT(IN)  :: KFIELD,KM,KMLOC
(   64) REAL(KIND=JPRB)  , INTENT(IN)  :: PFFT(:,:)
(   65) 
(   66) INTEGER(KIND=JPIM) :: ISTAN, JF, JGL
(   67) 
(   68) INTEGER(KIND=JPIM) :: IJR,IJI
(   69) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   70) 
(   71) !     ------------------------------------------------------------------
(   72) 
(   73) !*       1.    EXTRACT SYM./ANTISYM. FIELDS FROM FOURIER ARRAY.
(   74) !              ------------------------------------------------
(   75) IF (LHOOK) CALL DR_HOOK('EPRFI2BAD_MOD:EPRFI2BAD',0,ZHOOK_HANDLE)
(   76) DO JGL=1,R%NDGL
(   77)   ISTAN = (D%NSTAGT1B(D%NPROCL(JGL) )+D%NPNTGTB1(KMLOC,JGL ))*2*KFIELD
(   78)   DO JF =1,KFIELD
(   79)     IJR = 2*(JF-1)+1
(   80)     IJI = IJR+1
(   81)     FOUBUF(ISTAN+IJR) = PFFT(JGL,IJR)
(   82)     FOUBUF(ISTAN+IJI) = PFFT(JGL,IJI)
(   83)   ENDDO
(   84) ENDDO
(   85) IF (LHOOK) CALL DR_HOOK('EPRFI2BAD_MOD:EPRFI2BAD',1,ZHOOK_HANDLE)
(   86) 
(   87) !     ------------------------------------------------------------------
(   88) 
(   89) END SUBROUTINE EPRFI2BAD
(   90) END MODULE EPRFI2BAD_MOD







NVFORTRAN (Version    20.11)          02/16/2022  17:27:44      page 3

(    1) # 1 "eprfi2bad_mod.F90"
(    1) MODULE EPRFI2BAD_MOD
(    2) CONTAINS
(    3) SUBROUTINE EPRFI2BAD(KFIELD,KM,KMLOC,PFFT)
(    4) # 5 "eprfi2bad_mod.F90"
(    5) !**** *EPRFI2BAD* - Prepare input work arrays for direct transform
(    6) # 7 "eprfi2bad_mod.F90"
(    7) !     Purpose.
(    8) !     --------
(    9) !        To extract the Fourier fields for a specific zonal wavenumber
(   10) !        and put them in an order suitable for the direct Legendre
(   11) !        tranforms, i.e. split into symmetric and anti-symmetric part.
(   12) # 13 "eprfi2bad_mod.F90"
(   13) !**   Interface.
(   14) !     ----------
(   15) !     *CALL* *EPRFI2BAD(..)
(   16) # 17 "eprfi2bad_mod.F90"
(   17) !        Explicit arguments :
(   18) !        -------------------   KFIELD - number of fields
(   19) !                              KM - zonal wavenumber
(   20) !                              KMLOC - local zonal wavenumber
(   21) !                              PAOA - antisymmetric part of Fourier
(   22) !                              fields for zonal wavenumber KM
(   23) !                              PSOA - symmetric part of Fourier
(   24) !                              fields for zonal wavenumber KM
(   25) # 26 "eprfi2bad_mod.F90"
(   26) !        Implicit arguments :  FOUBUF in TPM_TRANS
(   27) !        --------------------
(   28) # 29 "eprfi2bad_mod.F90"
(   29) !     Method.
(   30) !     -------
(   31) # 32 "eprfi2bad_mod.F90"
(   32) !     Externals.   None.
(   33) !     ----------
(   34) # 35 "eprfi2bad_mod.F90"
(   35) !     Reference.
(   36) !     ----------
(   37) !        ECMWF Research Department documentation of the IFS
(   38) # 39 "eprfi2bad_mod.F90"
(   39) !     Author.
(   40) !     -------
(   41) !        Mats Hamrud and Philippe Courtier  *ECMWF*
(   42) # 43 "eprfi2bad_mod.F90"
(   43) !     Modifications.
(   44) !     --------------
(   45) !        Original : 90-07-01
(   46) !        MPP Group: 95-10-01 Support for Distributed Memory version
(   47) !        Modified : 04/06/99 D.Salmond : change order of AIA and SIA
(   48) !        M.Hamrud      01-Oct-2003 CY28 Cleaning
(   49) !     ------------------------------------------------------------------
(   50) # 51 "eprfi2bad_mod.F90"
(   51) USE PARKIND1  ,ONLY : JPIM     ,JPRB
(   52) USE YOMHOOK   ,ONLY : LHOOK,   DR_HOOK
(   53) # 54 "eprfi2bad_mod.F90"
(   54) USE TPM_DIM         ,ONLY : R
(   55) !USE TPMALD_DIM      ,ONLY : RALD
(   56) USE TPM_TRANS       ,ONLY : FOUBUF
(   57) !USE TPM_GEOMETRY






NVFORTRAN (Version    20.11)          02/16/2022  17:27:44      page 4

(   58) USE TPM_DISTR       ,ONLY : D
(   59) !
(   60) # 61 "eprfi2bad_mod.F90"
(   61) IMPLICIT NONE
(   62) # 63 "eprfi2bad_mod.F90"
(   63) INTEGER(KIND=JPIM),INTENT(IN)  :: KFIELD,KM,KMLOC
(   64) REAL(KIND=JPRB)  , INTENT(IN)  :: PFFT(:,:)
(   65) # 66 "eprfi2bad_mod.F90"
(   66) INTEGER(KIND=JPIM) :: ISTAN, JF, JGL
(   67) # 68 "eprfi2bad_mod.F90"
(   68) INTEGER(KIND=JPIM) :: IJR,IJI
(   69) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   70) # 71 "eprfi2bad_mod.F90"
(   71) !     ------------------------------------------------------------------
(   72) # 73 "eprfi2bad_mod.F90"
(   73) !*       1.    EXTRACT SYM./ANTISYM. FIELDS FROM FOURIER ARRAY.
(   74) !              ------------------------------------------------
(   75) IF (LHOOK) CALL DR_HOOK('EPRFI2BAD_MOD:EPRFI2BAD',0,ZHOOK_HANDLE)
(   76) DO JGL=1,R%NDGL
(   77)   ISTAN = (D%NSTAGT1B(D%NPROCL(JGL) )+D%NPNTGTB1(KMLOC,JGL ))*2*KFIELD
(   78)   DO JF =1,KFIELD
(   79)     IJR = 2*(JF-1)+1
(   80)     IJI = IJR+1
(   81)     FOUBUF(ISTAN+IJR) = PFFT(JGL,IJR)
(   82)     FOUBUF(ISTAN+IJI) = PFFT(JGL,IJI)
(   83)   ENDDO
(   84) ENDDO
(   85) IF (LHOOK) CALL DR_HOOK('EPRFI2BAD_MOD:EPRFI2BAD',1,ZHOOK_HANDLE)
(   86) # 87 "eprfi2bad_mod.F90"
(   87) !     ------------------------------------------------------------------
(   88) # 89 "eprfi2bad_mod.F90"
(   89) END SUBROUTINE EPRFI2BAD
(   90) END MODULE EPRFI2BAD_MOD
