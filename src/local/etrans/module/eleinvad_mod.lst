


NVFORTRAN (Version    20.11)          02/16/2022  17:27:52      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir /gpfslocalsup/spack_soft/openmpi/4.0.5/nvhpc-20.11-3li3t3xykfzndqfr4oxyhh22iqiendl2/include
          -idir /gpfslocalsup/spack_soft/openmpi/4.0.5/nvhpc-20.11-3li3t3xykfzndqfr4oxyhh22iqiendl2/lib
          -inform severe -opt 2 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: eleinvad_mod.F90

(    1) MODULE ELEINVAD_MOD
(    2) CONTAINS
(    3) SUBROUTINE ELEINVAD(KM,KFC,KF_OUT_LT,PIA)
(    4) 
(    5) !**** *ELEINVAD* - Inverse Legendre transform.
(    6) 
(    7) !     Purpose.
(    8) !     --------
(    9) !        Inverse Legendre tranform of all variables(kernel).
(   10) 
(   11) !**   Interface.
(   12) !     ----------
(   13) !        CALL ELEINVAD(...)
(   14) 
(   15) !        Explicit arguments :  KM - zonal wavenumber (input-c)
(   16) !        --------------------  KFC - number of fields to tranform (input-c)
(   17) !                              PIA - spectral fields
(   18) !                              for zonal wavenumber KM (input)
(   19) !                              PAOA1 - antisymmetric part of Fourier
(   20) !                              fields for zonal wavenumber KM (output)
(   21) !                              PSOA1 - symmetric part of Fourier
(   22) !                              fields for zonal wavenumber KM (output)
(   23) !                              PLEPO - Legendre polonomials for zonal
(   24) !                              wavenumber KM (input-c)
(   25) 
(   26) !        Implicit arguments :  None.
(   27) !        --------------------
(   28) 
(   29) !     Method.
(   30) !     -------
(   31) 
(   32) !     Externals.   MXMAOP - calls SGEMVX (matrix multiply)
(   33) !     ----------






NVFORTRAN (Version    20.11)          02/16/2022  17:27:52      page 2

(   34) 
(   35) !     Reference.
(   36) !     ----------
(   37) !        ECMWF Research Department documentation of the IFS
(   38) 
(   39) !     Author.
(   40) !     -------
(   41) !        Mats Hamrud and Philippe Courtier  *ECMWF*
(   42) 
(   43) !     Modifications.
(   44) !     --------------
(   45) !        Original : 00-02-01 From LEINVAD in IFS CY22R1
(   46) !        M.Hamrud      01-Oct-2003 CY28 Cleaning
(   47) !        D. Degrauwe  (Feb 2012): Alternative extension zone (E')
(   48) 
(   49) !     ------------------------------------------------------------------
(   50) 
(   51) USE PARKIND1  ,ONLY : JPIM     ,JPRB
(   52) USE YOMHOOK   ,ONLY : LHOOK,   DR_HOOK
(   53) 
(   54) USE TPM_DIM         ,ONLY : R
(   55) !USE TPM_GEOMETRY
(   56) !USE TPM_TRANS
(   57) 
(   58) USE TPMALD_DIM      ,ONLY : RALD
(   59) USE TPMALD_FFT      ,ONLY : TALD
(   60) !
(   61) 
(   62) IMPLICIT NONE
(   63) 
(   64) INTEGER(KIND=JPIM), INTENT(IN)    :: KM
(   65) INTEGER(KIND=JPIM), INTENT(IN)    :: KFC
(   66) INTEGER(KIND=JPIM), INTENT(IN)    :: KF_OUT_LT
(   67) REAL(KIND=JPRB),    INTENT(OUT)   :: PIA(:,:)
(   68) 
(   69) INTEGER(KIND=JPIM) :: JJ, JF
(   70) REAL(KIND=JPRB) :: ZNORM
(   71) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   72) 
(   73) !     ------------------------------------------------------------------
(   74) 
(   75) IF (LHOOK) CALL DR_HOOK('ELEINVAD_MOD:ELEINVAD',0,ZHOOK_HANDLE)
(   76) CALL FFT992(PIA,TALD%TRIGSE,TALD%NFAXE,1,RALD%NDGLSUR+R%NNOEXTZG,R%NDGL+R%NNOEXTZG,KFC,-1)
(   77) 
(   78) ZNORM=2.0_JPRB*REAL(R%NDGL+R%NNOEXTZG,JPRB)
(   79) DO JJ=1,1
(   80)   DO JF=1,KFC
(   81)     PIA(JJ,JF) = (ZNORM/2.0_JPRB) * PIA(JJ,JF)
(   82)   ENDDO
(   83) ENDDO
(   84) 
(   85) DO JJ=3,R%NDGL+R%NNOEXTZG+1
(   86)   DO JF=1,KFC
(   87)     PIA(JJ,JF) = ZNORM * PIA(JJ,JF)
(   88)   ENDDO
(   89) ENDDO
(   90) IF (LHOOK) CALL DR_HOOK('ELEINVAD_MOD:ELEINVAD',1,ZHOOK_HANDLE)
(   91) 






NVFORTRAN (Version    20.11)          02/16/2022  17:27:52      page 3

(   92) !     ------------------------------------------------------------------
(   93) 
(   94) END SUBROUTINE ELEINVAD
(   95) END MODULE ELEINVAD_MOD




























































NVFORTRAN (Version    20.11)          02/16/2022  17:27:52      page 4

(    1) # 1 "eleinvad_mod.F90"
(    1) MODULE ELEINVAD_MOD
(    2) CONTAINS
(    3) SUBROUTINE ELEINVAD(KM,KFC,KF_OUT_LT,PIA)
(    4) # 5 "eleinvad_mod.F90"
(    5) !**** *ELEINVAD* - Inverse Legendre transform.
(    6) # 7 "eleinvad_mod.F90"
(    7) !     Purpose.
(    8) !     --------
(    9) !        Inverse Legendre tranform of all variables(kernel).
(   10) # 11 "eleinvad_mod.F90"
(   11) !**   Interface.
(   12) !     ----------
(   13) !        CALL ELEINVAD(...)
(   14) # 15 "eleinvad_mod.F90"
(   15) !        Explicit arguments :  KM - zonal wavenumber (input-c)
(   16) !        --------------------  KFC - number of fields to tranform (input-c)
(   17) !                              PIA - spectral fields
(   18) !                              for zonal wavenumber KM (input)
(   19) !                              PAOA1 - antisymmetric part of Fourier
(   20) !                              fields for zonal wavenumber KM (output)
(   21) !                              PSOA1 - symmetric part of Fourier
(   22) !                              fields for zonal wavenumber KM (output)
(   23) !                              PLEPO - Legendre polonomials for zonal
(   24) !                              wavenumber KM (input-c)
(   25) # 26 "eleinvad_mod.F90"
(   26) !        Implicit arguments :  None.
(   27) !        --------------------
(   28) # 29 "eleinvad_mod.F90"
(   29) !     Method.
(   30) !     -------
(   31) # 32 "eleinvad_mod.F90"
(   32) !     Externals.   MXMAOP - calls SGEMVX (matrix multiply)
(   33) !     ----------
(   34) # 35 "eleinvad_mod.F90"
(   35) !     Reference.
(   36) !     ----------
(   37) !        ECMWF Research Department documentation of the IFS
(   38) # 39 "eleinvad_mod.F90"
(   39) !     Author.
(   40) !     -------
(   41) !        Mats Hamrud and Philippe Courtier  *ECMWF*
(   42) # 43 "eleinvad_mod.F90"
(   43) !     Modifications.
(   44) !     --------------
(   45) !        Original : 00-02-01 From LEINVAD in IFS CY22R1
(   46) !        M.Hamrud      01-Oct-2003 CY28 Cleaning
(   47) !        D. Degrauwe  (Feb 2012): Alternative extension zone (E')
(   48) # 49 "eleinvad_mod.F90"
(   49) !     ------------------------------------------------------------------
(   50) # 51 "eleinvad_mod.F90"
(   51) USE PARKIND1  ,ONLY : JPIM     ,JPRB
(   52) USE YOMHOOK   ,ONLY : LHOOK,   DR_HOOK
(   53) # 54 "eleinvad_mod.F90"
(   54) USE TPM_DIM         ,ONLY : R
(   55) !USE TPM_GEOMETRY
(   56) !USE TPM_TRANS
(   57) # 58 "eleinvad_mod.F90"






NVFORTRAN (Version    20.11)          02/16/2022  17:27:52      page 5

(   58) USE TPMALD_DIM      ,ONLY : RALD
(   59) USE TPMALD_FFT      ,ONLY : TALD
(   60) !
(   61) # 62 "eleinvad_mod.F90"
(   62) IMPLICIT NONE
(   63) # 64 "eleinvad_mod.F90"
(   64) INTEGER(KIND=JPIM), INTENT(IN)    :: KM
(   65) INTEGER(KIND=JPIM), INTENT(IN)    :: KFC
(   66) INTEGER(KIND=JPIM), INTENT(IN)    :: KF_OUT_LT
(   67) REAL(KIND=JPRB),    INTENT(OUT)   :: PIA(:,:)
(   68) # 69 "eleinvad_mod.F90"
(   69) INTEGER(KIND=JPIM) :: JJ, JF
(   70) REAL(KIND=JPRB) :: ZNORM
(   71) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   72) # 73 "eleinvad_mod.F90"
(   73) !     ------------------------------------------------------------------
(   74) # 75 "eleinvad_mod.F90"
(   75) IF (LHOOK) CALL DR_HOOK('ELEINVAD_MOD:ELEINVAD',0,ZHOOK_HANDLE)
(   76) CALL FFT992(PIA,TALD%TRIGSE,TALD%NFAXE,1,RALD%NDGLSUR+R%NNOEXTZG,R%NDGL+R%NNOEXTZG,KFC,-1)
(   77) # 78 "eleinvad_mod.F90"
(   78) ZNORM=2.0_JPRB*REAL(R%NDGL+R%NNOEXTZG,JPRB)
(   79) DO JJ=1,1
(   80)   DO JF=1,KFC
(   81)     PIA(JJ,JF) = (ZNORM/2.0_JPRB) * PIA(JJ,JF)
(   82)   ENDDO
(   83) ENDDO
(   84) # 85 "eleinvad_mod.F90"
(   85) DO JJ=3,R%NDGL+R%NNOEXTZG+1
(   86)   DO JF=1,KFC
(   87)     PIA(JJ,JF) = ZNORM * PIA(JJ,JF)
(   88)   ENDDO
(   89) ENDDO
(   90) IF (LHOOK) CALL DR_HOOK('ELEINVAD_MOD:ELEINVAD',1,ZHOOK_HANDLE)
(   91) # 92 "eleinvad_mod.F90"
(   92) !     ------------------------------------------------------------------
(   93) # 94 "eleinvad_mod.F90"
(   94) END SUBROUTINE ELEINVAD
(   95) END MODULE ELEINVAD_MOD
