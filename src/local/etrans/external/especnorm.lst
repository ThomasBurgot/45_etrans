


NVFORTRAN (Version    20.11)          02/16/2022  17:30:49      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir /gpfslocalsup/spack_soft/openmpi/4.0.5/nvhpc-20.11-3li3t3xykfzndqfr4oxyhh22iqiendl2/include
          -idir /gpfslocalsup/spack_soft/openmpi/4.0.5/nvhpc-20.11-3li3t3xykfzndqfr4oxyhh22iqiendl2/lib
          -inform severe -opt 2 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: especnorm.F90

(    1) SUBROUTINE ESPECNORM(PSPEC,KVSET,KMASTER,KRESOL,PMET,PNORM)
(    2) 
(    3) !**** *ESPECNORM* - Compute global spectral norms
(    4) 
(    5) !     Purpose.
(    6) !     --------
(    7) !        Interface routine for computing spectral norms
(    8) 
(    9) !**   Interface.
(   10) !     ----------
(   11) !     CALL ESPECNORM(...)
(   12) 
(   13) !     Explicit arguments : All arguments optional
(   14) !     --------------------
(   15) !     PSPEC(:,:)  - Spectral array
(   16) !     KVSET(:)    - "B-Set" for each field
(   17) !     KMASTER     - processor to recieve norms
(   18) !     KRESOL      - resolution tag  which is required ,default is the
(   19) !                   first defined resulution (input)
(   20) !     PMET(:)     - metric
(   21) !     PNORM(:)    - Norms (output for processor KMASTER)
(   22) 
(   23) !     Method.
(   24) !     -------
(   25) 
(   26) !     Externals.  ESET_RESOL - set resolution
(   27) !     ----------  ESPNORM_CTL - control routine
(   28) 
(   29) !     Author.
(   30) !     -------
(   31) !        Mats Hamrud *ECMWF*






NVFORTRAN (Version    20.11)          02/16/2022  17:30:49      page 2

(   32) 
(   33) !     Modifications.
(   34) !     --------------
(   35) !        Original : 00-03-03
(   36) !        M.Hamrud      01-Oct-2003 CY28 Cleaning
(   37) 
(   38) !     ------------------------------------------------------------------
(   39) 
(   40) USE PARKIND1  ,ONLY : JPIM     ,JPRB
(   41) USE YOMHOOK   ,ONLY : LHOOK,   DR_HOOK
(   42) 
(   43) !ifndef INTERFACE
(   44) 
(   45) USE TPM_GEN         ,ONLY : NERR
(   46) !USE TPM_DIM
(   47) USE TPM_DISTR       ,ONLY : D, NPRTRV, MYSETV, MYPROC
(   48) 
(   49) USE ESET_RESOL_MOD  ,ONLY : ESET_RESOL
(   50) USE ESPNORM_CTL_MOD ,ONLY : ESPNORM_CTL
(   51) USE ABORT_TRANS_MOD ,ONLY : ABORT_TRANS
(   52) 
(   53) !endif INTERFACE
(   54) 
(   55) IMPLICIT NONE
(   56) 
(   57) ! Declaration of arguments
(   58) 
(   59) REAL(KIND=JPRB)   ,OPTIONAL,INTENT(IN)    :: PSPEC(:,:)
(   60) INTEGER(KIND=JPIM),OPTIONAL,INTENT(IN)    :: KVSET(:)
(   61) INTEGER(KIND=JPIM),OPTIONAL,INTENT(IN)    :: KMASTER
(   62) INTEGER(KIND=JPIM),OPTIONAL,INTENT(IN)    :: KRESOL
(   63) REAL(KIND=JPRB)   ,OPTIONAL,INTENT(IN)    :: PMET(:)
(   64) REAL(KIND=JPRB)   ,OPTIONAL,INTENT(OUT)   :: PNORM(:)
(   65) !ifndef INTERFACE
(   66) 
(   67) INTEGER(KIND=JPIM) :: IMASTER,IFLD,IFLD_G,J
(   68) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   69) 
(   70) !     ------------------------------------------------------------------
(   71) 
(   72) ! Set current resolution
(   73) IF (LHOOK) CALL DR_HOOK('ESPECNORM',0,ZHOOK_HANDLE)
(   74) CALL ESET_RESOL(KRESOL)
(   75) 
(   76) ! Set defaults
(   77) IMASTER = 1
(   78) IFLD    = 0
(   79) 
(   80) IF(PRESENT(KMASTER)) THEN
(   81)   IMASTER = KMASTER
(   82) ENDIF
(   83) 
(   84) IF(PRESENT(KVSET)) THEN
(   85)   IFLD_G = UBOUND(KVSET,1)
(   86)   DO J=1,IFLD_G
(   87)     IF(KVSET(J) > NPRTRV) THEN
(   88)       WRITE(NERR,*) 'ESPECNORM:KVSET(J) > NPRTRV ',J,KVSET(J),NPRTRV
(   89)       CALL ABORT_TRANS('ESPECNORM:KVSET TOO LONG OR CONTAINS VALUES OUTSIDE RANGE')






NVFORTRAN (Version    20.11)          02/16/2022  17:30:49      page 3

(   90)     ENDIF
(   91)     IF(KVSET(J) == MYSETV) THEN
(   92)       IFLD = IFLD+1
(   93)     ENDIF
(   94)   ENDDO
(   95) ELSE
(   96)   IF(PRESENT(PSPEC)) THEN
(   97)     IFLD = UBOUND(PSPEC,1)
(   98)   ENDIF
(   99)   IFLD_G = IFLD
(  100) ENDIF
(  101) 
(  102) IF(NPRTRV >1) THEN
(  103)   IF(IFLD > 0 .AND. .NOT. PRESENT(KVSET)) THEN
(  104)     WRITE(NERR,*)'NPRTRV >1 AND IFLD > 0 AND NOT PRESENT(KVSET)',&
(  105)      & NPRTRV,IFLD
(  106)     CALL ABORT_TRANS('ESPECNORM: SPECIFY VERTICAL SPECTRAL DISTRIBUTION!')
(  107)   ENDIF
(  108) ENDIF
(  109) IF(MYPROC == IMASTER) THEN
(  110)   IF(.NOT. PRESENT(PNORM)) THEN
(  111)     CALL ABORT_TRANS('ESPECNORM: PNORM NOT PRESENT')
(  112)   ENDIF
(  113)   IF(UBOUND(PNORM,1) < IFLD_G) THEN
(  114)     CALL ABORT_TRANS('ESPECNORM: PNORM TOO SMALL')
(  115)   ENDIF
(  116) ENDIF
(  117) IF(IFLD > 0 ) THEN
(  118)   IF(.NOT. PRESENT(PSPEC)) THEN
(  119)     CALL ABORT_TRANS('ESPECNORM: PSPEC NOT PRESENT')
(  120)   ENDIF
(  121)   IF(UBOUND(PSPEC,1) < IFLD) THEN
(  122)     CALL ABORT_TRANS('ESPECNORM: FIRST DIMENSION OF PSPEC TOO SMALL')
(  123)   ENDIF
(  124)   IF(UBOUND(PSPEC,2) < D%NSPEC2) THEN
(  125)     CALL ABORT_TRANS('ESPECNORM: FIRST DIMENSION OF PSPEC TOO SMALL')
(  126)   ENDIF
(  127) ENDIF
(  128) 
(  129) CALL ESPNORM_CTL(PSPEC,IFLD,IFLD_G,KVSET,IMASTER,PMET,PNORM)
(  130) IF (LHOOK) CALL DR_HOOK('ESPECNORM',1,ZHOOK_HANDLE)
(  131) 
(  132) !endif INTERFACE
(  133) 
(  134) !     ------------------------------------------------------------------
(  135) 
(  136) END SUBROUTINE ESPECNORM

















NVFORTRAN (Version    20.11)          02/16/2022  17:30:49      page 4

(    1) # 1 "especnorm.F90"
(    1) SUBROUTINE ESPECNORM(PSPEC,KVSET,KMASTER,KRESOL,PMET,PNORM)
(    2) # 3 "especnorm.F90"
(    3) !**** *ESPECNORM* - Compute global spectral norms
(    4) # 5 "especnorm.F90"
(    5) !     Purpose.
(    6) !     --------
(    7) !        Interface routine for computing spectral norms
(    8) # 9 "especnorm.F90"
(    9) !**   Interface.
(   10) !     ----------
(   11) !     CALL ESPECNORM(...)
(   12) # 13 "especnorm.F90"
(   13) !     Explicit arguments : All arguments optional
(   14) !     --------------------
(   15) !     PSPEC(:,:)  - Spectral array
(   16) !     KVSET(:)    - "B-Set" for each field
(   17) !     KMASTER     - processor to recieve norms
(   18) !     KRESOL      - resolution tag  which is required ,default is the
(   19) !                   first defined resulution (input)
(   20) !     PMET(:)     - metric
(   21) !     PNORM(:)    - Norms (output for processor KMASTER)
(   22) # 23 "especnorm.F90"
(   23) !     Method.
(   24) !     -------
(   25) # 26 "especnorm.F90"
(   26) !     Externals.  ESET_RESOL - set resolution
(   27) !     ----------  ESPNORM_CTL - control routine
(   28) # 29 "especnorm.F90"
(   29) !     Author.
(   30) !     -------
(   31) !        Mats Hamrud *ECMWF*
(   32) # 33 "especnorm.F90"
(   33) !     Modifications.
(   34) !     --------------
(   35) !        Original : 00-03-03
(   36) !        M.Hamrud      01-Oct-2003 CY28 Cleaning
(   37) # 38 "especnorm.F90"
(   38) !     ------------------------------------------------------------------
(   39) # 40 "especnorm.F90"
(   40) USE PARKIND1  ,ONLY : JPIM     ,JPRB
(   41) USE YOMHOOK   ,ONLY : LHOOK,   DR_HOOK
(   42) # 43 "especnorm.F90"
(   43) !ifndef INTERFACE
(   44) # 45 "especnorm.F90"
(   45) USE TPM_GEN         ,ONLY : NERR
(   46) !USE TPM_DIM
(   47) USE TPM_DISTR       ,ONLY : D, NPRTRV, MYSETV, MYPROC
(   48) # 49 "especnorm.F90"
(   49) USE ESET_RESOL_MOD  ,ONLY : ESET_RESOL
(   50) USE ESPNORM_CTL_MOD ,ONLY : ESPNORM_CTL
(   51) USE ABORT_TRANS_MOD ,ONLY : ABORT_TRANS
(   52) # 53 "especnorm.F90"
(   53) !endif INTERFACE
(   54) # 55 "especnorm.F90"
(   55) IMPLICIT NONE
(   56) # 57 "especnorm.F90"
(   57) ! Declaration of arguments






NVFORTRAN (Version    20.11)          02/16/2022  17:30:49      page 5

(   58) # 59 "especnorm.F90"
(   59) REAL(KIND=JPRB)   ,OPTIONAL,INTENT(IN)    :: PSPEC(:,:)
(   60) INTEGER(KIND=JPIM),OPTIONAL,INTENT(IN)    :: KVSET(:)
(   61) INTEGER(KIND=JPIM),OPTIONAL,INTENT(IN)    :: KMASTER
(   62) INTEGER(KIND=JPIM),OPTIONAL,INTENT(IN)    :: KRESOL
(   63) REAL(KIND=JPRB)   ,OPTIONAL,INTENT(IN)    :: PMET(:)
(   64) REAL(KIND=JPRB)   ,OPTIONAL,INTENT(OUT)   :: PNORM(:)
(   65) !ifndef INTERFACE
(   66) # 67 "especnorm.F90"
(   67) INTEGER(KIND=JPIM) :: IMASTER,IFLD,IFLD_G,J
(   68) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   69) # 70 "especnorm.F90"
(   70) !     ------------------------------------------------------------------
(   71) # 72 "especnorm.F90"
(   72) ! Set current resolution
(   73) IF (LHOOK) CALL DR_HOOK('ESPECNORM',0,ZHOOK_HANDLE)
(   74) CALL ESET_RESOL(KRESOL)
(   75) # 76 "especnorm.F90"
(   76) ! Set defaults
(   77) IMASTER = 1
(   78) IFLD    = 0
(   79) # 80 "especnorm.F90"
(   80) IF(PRESENT(KMASTER)) THEN
(   81)   IMASTER = KMASTER
(   82) ENDIF
(   83) # 84 "especnorm.F90"
(   84) IF(PRESENT(KVSET)) THEN
(   85)   IFLD_G = UBOUND(KVSET,1)
(   86)   DO J=1,IFLD_G
(   87)     IF(KVSET(J) > NPRTRV) THEN
(   88)       WRITE(NERR,*) 'ESPECNORM:KVSET(J) > NPRTRV ',J,KVSET(J),NPRTRV
(   89)       CALL ABORT_TRANS('ESPECNORM:KVSET TOO LONG OR CONTAINS VALUES OUTSIDE RANGE')
(   90)     ENDIF
(   91)     IF(KVSET(J) == MYSETV) THEN
(   92)       IFLD = IFLD+1
(   93)     ENDIF
(   94)   ENDDO
(   95) ELSE
(   96)   IF(PRESENT(PSPEC)) THEN
(   97)     IFLD = UBOUND(PSPEC,1)
(   98)   ENDIF
(   99)   IFLD_G = IFLD
(  100) ENDIF
(  101) # 102 "especnorm.F90"
(  102) IF(NPRTRV >1) THEN
(  103)   IF(IFLD > 0 .AND. .NOT. PRESENT(KVSET)) THEN
(  104)     WRITE(NERR,*)'NPRTRV >1 AND IFLD > 0 AND NOT PRESENT(KVSET)',&
(  105)      & NPRTRV,IFLD
(  106)     CALL ABORT_TRANS('ESPECNORM: SPECIFY VERTICAL SPECTRAL DISTRIBUTION!')
(  107)   ENDIF
(  108) ENDIF
(  109) IF(MYPROC == IMASTER) THEN
(  110)   IF(.NOT. PRESENT(PNORM)) THEN
(  111)     CALL ABORT_TRANS('ESPECNORM: PNORM NOT PRESENT')
(  112)   ENDIF
(  113)   IF(UBOUND(PNORM,1) < IFLD_G) THEN
(  114)     CALL ABORT_TRANS('ESPECNORM: PNORM TOO SMALL')
(  115)   ENDIF






NVFORTRAN (Version    20.11)          02/16/2022  17:30:49      page 6

(  116) ENDIF
(  117) IF(IFLD > 0 ) THEN
(  118)   IF(.NOT. PRESENT(PSPEC)) THEN
(  119)     CALL ABORT_TRANS('ESPECNORM: PSPEC NOT PRESENT')
(  120)   ENDIF
(  121)   IF(UBOUND(PSPEC,1) < IFLD) THEN
(  122)     CALL ABORT_TRANS('ESPECNORM: FIRST DIMENSION OF PSPEC TOO SMALL')
(  123)   ENDIF
(  124)   IF(UBOUND(PSPEC,2) < D%NSPEC2) THEN
(  125)     CALL ABORT_TRANS('ESPECNORM: FIRST DIMENSION OF PSPEC TOO SMALL')
(  126)   ENDIF
(  127) ENDIF
(  128) # 129 "especnorm.F90"
(  129) CALL ESPNORM_CTL(PSPEC,IFLD,IFLD_G,KVSET,IMASTER,PMET,PNORM)
(  130) IF (LHOOK) CALL DR_HOOK('ESPECNORM',1,ZHOOK_HANDLE)
(  131) # 132 "especnorm.F90"
(  132) !endif INTERFACE
(  133) # 134 "especnorm.F90"
(  134) !     ------------------------------------------------------------------
(  135) # 136 "especnorm.F90"
(  136) END SUBROUTINE ESPECNORM
