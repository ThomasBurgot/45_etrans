


NVFORTRAN (Version    20.11)          02/16/2022  17:27:31      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir /gpfslocalsup/spack_soft/openmpi/4.0.5/nvhpc-20.11-3li3t3xykfzndqfr4oxyhh22iqiendl2/include
          -idir /gpfslocalsup/spack_soft/openmpi/4.0.5/nvhpc-20.11-3li3t3xykfzndqfr4oxyhh22iqiendl2/lib
          -inform severe -opt 2 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: test_Biper.F90

(    1) PROGRAM TEST_BIPER
(    2) !   purpose  :
(    3) !   --------
(    4) !    To test biperiodicization.
(    5) 
(    6) !    method  :
(    7) !   ---------
(    8) !    Reads horizontal input field on C U I U E, changes layout for use in ETIBIHI
(    9) !    or for use in FPBIPER (takes into account that for FPIBIPER is possible to have
(   10) !    input field on C U I U E or C U I. Makes biperiodicization. 
(   11) 
(   12) !   interface  :
(   13) !   ---------
(   14) !
(   15) !   externals :
(   16) !   ----------
(   17) !   ETIBIHI - Doubly-periodicisation
(   18) 
(   19) !   
(   20) !   references :
(   21) !    ----------
(   22) 
(   23) !    author :
(   24) !    -----
(   25) !    23-May-2008   Antonio Stanesic
(   26) !    ----------------------------------------------
(   27) 
(   28) USE PARKIND1  ,ONLY : JPIM     ,JPRB
(   29) 
(   30) IMPLICIT NONE
(   31) 
(   32) INTEGER(KIND=JPIM)               :: NNUBI       ! number of levels to biperiodicise
(   33) INTEGER(KIND=JPIM)               :: NSTART      ! first dimension in x direction of g-p array






NVFORTRAN (Version    20.11)          02/16/2022  17:27:31      page 2

(   34) INTEGER(KIND=JPIM)               :: NDLSM       ! second dimension in x direction of g-p array
(   35) 
(   36) INTEGER(KIND=JPIM)               :: NDLON       ! upper bound for the x (or longitude) dimension
(   37)                                                 ! of the gridpoint array on C U I U E
(   38) INTEGER(KIND=JPIM)               :: NDGL        ! upper bound for the y (or latitude) dimension
(   39)                                                 ! of the gridpoint array on C U I U E
(   40) INTEGER(KIND=JPIM)               :: NDLUX       ! upper bound for the x (or longitude) dimension
(   41)                                                 ! of  C U I.
(   42) INTEGER(KIND=JPIM)               :: NDGUX       ! upper bound for the y (or latitude) dimension
(   43)                                                 ! of  C U I.
(   44) REAL(KIND=JPRB),ALLOCATABLE      :: GPBI(:,:,:) ! random horizontal field for test ETIBIHI
(   45) REAL(KIND=JPRB),ALLOCATABLE      :: GGPBI(:,:)  ! random horizontal field for test FPBIPER
(   46) REAL(KIND=JPRB),ALLOCATABLE      :: HFIELD(:,:) ! input horizontal field 
(   47) LOGICAL                          :: LBIPX       ! .TRUE. biperiodicisation in x
(   48) LOGICAL                          :: LBIPY       ! .TRUE. biperiodicisation in y
(   49) LOGICAL                          :: LNZON       ! .TRUE. if input grid on C U I U E (.FALSE. if C U I)
(   50) INTEGER(KIND=JPIM)               :: JX,JY,JLEV,ISTAE,ND1,IENDX,IENDY
(   51) INTEGER(KIND=JPIM)               :: IADD        ! 1 if test of spline
(   52) 
(   53) #include "etibihie.h"
(   54) #include "fpbipere.h"
(   55) #include "horiz_field.h"
(   56) 
(   57) ! ------------------------------------------------------------------
(   58) 
(   59) !* 1. Initialization.
(   60) 
(   61) !* 1.1 Grindpoint common
(   62) ! -----------------------------
(   63) 
(   64) NNUBI=2
(   65) NSTART=1
(   66) NDLSM=288
(   67) NDLON=288
(   68) NDGL=288
(   69) NDLUX=266  
(   70) NDGUX=266 
(   71) LBIPX=.TRUE. 
(   72) !LBIPX=.FALSE. 
(   73) LBIPY=.TRUE. 
(   74) !LBIPY=.FALSE. 
(   75) LNZON=.FALSE.
(   76) !LNZON=.TRUE.
(   77) IADD=1 ! test spline
(   78) 
(   79) 
(   80) 
(   81) 
(   82) !* 1.1 Read input field.
(   83) ! -----------------------------
(   84) !Field is read for C+I+E
(   85) ALLOCATE(HFIELD(NDLON,NDGL))
(   86) 
(   87) CALL HORIZ_FIELD(NDLON,NDGL,HFIELD)
(   88) 
(   89) !* 1.2 Field for ETIBIHI.
(   90) ! ----------------------------- 
(   91) 






NVFORTRAN (Version    20.11)          02/16/2022  17:27:31      page 3

(   92) ALLOCATE(GPBI(NDLON+IADD,NNUBI,NDGL+IADD)) 
(   93) 
(   94) !change layout
(   95) DO JLEV=1,NNUBI 
(   96)   DO JY=1,NDGL
(   97)     DO JX=1,NDLON
(   98)       GPBI(JX,JLEV,JY)=HFIELD(JX,JY)
(   99)     ENDDO
(  100)   ENDDO
(  101) ENDDO
(  102) 
(  103) 
(  104) !* 1.3 Field for FPBIPER.
(  105) ! -----------------------------
(  106) 
(  107) !It's same field horizontal fild in different layout
(  108) !depending on assumption that we have field on C U I U E or 
(  109) !C U I. It is done for testing purposes because FBIPER takes
(  110) !both kinds of inputs.
(  111) ND1=(NDGL+IADD)*(NDLON+IADD)
(  112) IF(LNZON) THEN
(  113)   IENDX=NDLON
(  114)   IENDY=NDGL
(  115) ELSE
(  116)   IENDX=NDLUX
(  117)   IENDY=NDGUX
(  118) ENDIF
(  119) 
(  120) 
(  121) ALLOCATE(GGPBI(ND1,NNUBI)) !first dimension of GGPBI must always be NDGL*NDLON,
(  122) !because output from FPBIPER is always on C U I U E
(  123) !change of layout
(  124) DO JLEV=1,NNUBI
(  125)   ISTAE=0
(  126)   DO JY=1,IENDY
(  127)     DO JX=1,IENDX
(  128)       GGPBI(ISTAE+JX,JLEV)=HFIELD(JX,JY)
(  129)     ENDDO
(  130)     ISTAE=ISTAE+IENDX
(  131)   ENDDO
(  132) ENDDO
(  133) 
(  134) 
(  135) ! ------------------------------------------------------------------
(  136) 
(  137) !* 2. ETIBIHIE test
(  138) 
(  139) ! -----------------------------
(  140) 
(  141) WRITE(*,*) " "
(  142) WRITE(*,*) "Test of external program ETIBIHIE ... "
(  143) 
(  144) CALL ETIBIHIE(NDLON,NDGL,NNUBI,NDLUX,NDGUX,NSTART,NDLSM,GPBI,LBIPX,LBIPY,IADD) 
(  145) 
(  146) OPEN(UNIT=10,FILE="etibihi_test.txt",STATUS='REPLACE',POSITION='APPEND')
(  147) 
(  148) DO JLEV=1,NNUBI
(  149) WRITE(10,*) "******* Left(NDLUN) - right(NDLON+1) border  *******"






NVFORTRAN (Version    20.11)          02/16/2022  17:27:31      page 4

(  150)  DO JY=1,NDGL
(  151)    WRITE(10,FMT='(F12.4)') GPBI(1,JLEV,JY)-GPBI(NDLON+IADD,JLEV,JY)  
(  152)  ENDDO
(  153) 
(  154)  WRITE(10,*) "******* Bottom(NDGUN) - top(NDGL+1) border  *******"
(  155)  DO JX=1,NDLON
(  156)    WRITE(10,FMT='(F12.4)') GPBI(JX,JLEV,1)-GPBI(JX,JLEV,NDGL+IADD)  
(  157)  ENDDO
(  158) ENDDO
(  159) WRITE(*,*) "Output from ETIBIHIE test written in file etibihi_test.txt."
(  160) 
(  161) ! ------------------------------------------------------------------
(  162) 
(  163) !* 3. FBIPERE test
(  164) 
(  165) ! -----------------------------
(  166) 
(  167) WRITE(*,*) " "
(  168) WRITE(*,*) "Test of external program FPBIPERE ... "
(  169) 
(  170) CALL FPBIPERE(NDLUX,NDGUX,NDLON,NDGL,NNUBI,ND1,GGPBI,IADD,LNZON)
(  171) 
(  172) OPEN(UNIT=11,FILE="fpbiper_test.txt",STATUS='REPLACE',POSITION='APPEND')
(  173) 
(  174) DO JLEV=1,NNUBI
(  175) WRITE(11,*) "******* Left(NDLUN) - right(NDLON+1) border  *******"
(  176) ISTAE=1
(  177)  DO JY=1,NDGL
(  178)   WRITE(11,FMT='(F12.4)') GGPBI(ISTAE,JLEV)-GGPBI(ISTAE+NDLON,JLEV)
(  179)   ISTAE=ISTAE+NDLON+IADD
(  180)  ENDDO
(  181) 
(  182)  WRITE(11,*) "******* Bottom(NDGUN) - top(NDGL+1) border  *******"
(  183)  DO JX=1,NDLON
(  184)   WRITE(11,FMT='(F12.4)') GGPBI(JX,JLEV)-GGPBI(ND1-NDLON-IADD+JX,JLEV)
(  185)  ENDDO
(  186) ENDDO
(  187) WRITE(*,*) "Output from FPBIPER written in file fpbiper_test.txt."
(  188) 
(  189) END PROGRAM TEST_BIPER
























NVFORTRAN (Version    20.11)          02/16/2022  17:27:31      page 5

(    1) # 1 "test_Biper.F90"
(    1) PROGRAM TEST_BIPER
(    2) !   purpose  :
(    3) !   --------
(    4) !    To test biperiodicization.
(    5) # 6 "test_Biper.F90"
(    6) !    method  :
(    7) !   ---------
(    8) !    Reads horizontal input field on C U I U E, changes layout for use in ETIBIHI
(    9) !    or for use in FPBIPER (takes into account that for FPIBIPER is possible to have
(   10) !    input field on C U I U E or C U I. Makes biperiodicization. 
(   11) # 12 "test_Biper.F90"
(   12) !   interface  :
(   13) !   ---------
(   14) !
(   15) !   externals :
(   16) !   ----------
(   17) !   ETIBIHI - Doubly-periodicisation
(   18) # 19 "test_Biper.F90"
(   19) !   
(   20) !   references :
(   21) !    ----------
(   22) # 23 "test_Biper.F90"
(   23) !    author :
(   24) !    -----
(   25) !    23-May-2008   Antonio Stanesic
(   26) !    ----------------------------------------------
(   27) # 28 "test_Biper.F90"
(   28) USE PARKIND1  ,ONLY : JPIM     ,JPRB
(   29) # 30 "test_Biper.F90"
(   30) IMPLICIT NONE
(   31) # 32 "test_Biper.F90"
(   32) INTEGER(KIND=JPIM)               :: NNUBI       ! number of levels to biperiodicise
(   33) INTEGER(KIND=JPIM)               :: NSTART      ! first dimension in x direction of g-p array
(   34) INTEGER(KIND=JPIM)               :: NDLSM       ! second dimension in x direction of g-p array
(   35) # 36 "test_Biper.F90"
(   36) INTEGER(KIND=JPIM)               :: NDLON       ! upper bound for the x (or longitude) dimension
(   37)                                                 ! of the gridpoint array on C U I U E
(   38) INTEGER(KIND=JPIM)               :: NDGL        ! upper bound for the y (or latitude) dimension
(   39)                                                 ! of the gridpoint array on C U I U E
(   40) INTEGER(KIND=JPIM)               :: NDLUX       ! upper bound for the x (or longitude) dimension
(   41)                                                 ! of  C U I.
(   42) INTEGER(KIND=JPIM)               :: NDGUX       ! upper bound for the y (or latitude) dimension
(   43)                                                 ! of  C U I.
(   44) REAL(KIND=JPRB),ALLOCATABLE      :: GPBI(:,:,:) ! random horizontal field for test ETIBIHI
(   45) REAL(KIND=JPRB),ALLOCATABLE      :: GGPBI(:,:)  ! random horizontal field for test FPBIPER
(   46) REAL(KIND=JPRB),ALLOCATABLE      :: HFIELD(:,:) ! input horizontal field 
(   47) LOGICAL                          :: LBIPX       ! .TRUE. biperiodicisation in x
(   48) LOGICAL                          :: LBIPY       ! .TRUE. biperiodicisation in y
(   49) LOGICAL                          :: LNZON       ! .TRUE. if input grid on C U I U E (.FALSE. if C U I)
(   50) INTEGER(KIND=JPIM)               :: JX,JY,JLEV,ISTAE,ND1,IENDX,IENDY
(   51) INTEGER(KIND=JPIM)               :: IADD        ! 1 if test of spline
(   52) # 53 "test_Biper.F90"
(   53) # 1 ".D[5]/etibihie.h"
(    1) INTERFACE
(    2) SUBROUTINE ETIBIHIE(KDLON,KDGL,KNUBI,KDLUX,KDGUX,&
(    3)  & KSTART,KDLSM,PGPBI,LDBIX,LDBIY,KDADD)  
(    4) # 5 ".D[5]/etibihie.h"






NVFORTRAN (Version    20.11)          02/16/2022  17:27:31      page 6

(    5) USE PARKIND1  ,ONLY : JPIM     ,JPRB
(    6) # 7 ".D[5]/etibihie.h"
(    7) IMPLICIT NONE
(    8) # 9 ".D[5]/etibihie.h"
(    9) INTEGER(KIND=JPIM),INTENT(IN)               :: KNUBI
(   10) INTEGER(KIND=JPIM),INTENT(IN)               :: KSTART
(   11) INTEGER(KIND=JPIM),INTENT(IN)               :: KDLSM 
(   12) INTEGER(KIND=JPIM),INTENT(IN)               :: KDLON 
(   13) INTEGER(KIND=JPIM),INTENT(IN)               :: KDGL 
(   14) INTEGER(KIND=JPIM),INTENT(IN)               :: KDLUX 
(   15) INTEGER(KIND=JPIM),INTENT(IN)               :: KDGUX 
(   16) INTEGER(KIND=JPIM),INTENT(IN)               :: KDADD
(   17) REAL(KIND=JPRB),INTENT(INOUT)               :: PGPBI(KSTART:KDLSM+KDADD,KNUBI,1:KDGL+KDADD) 
(   18) LOGICAL,INTENT(IN)                          :: LDBIX 
(   19) LOGICAL,INTENT(IN)                          :: LDBIY 
(   20) # 21 ".D[5]/etibihie.h"
(   21) END SUBROUTINE ETIBIHIE
(   22) END INTERFACE
(   23) # 54 "test_Biper.F90"
(   54) # 54 "test_Biper.F90"
(   54) # 1 ".D[5]/fpbipere.h"
(    1) INTERFACE
(    2) SUBROUTINE FPBIPERE(KDLUX,KDGUX,KDLON,KDGL,KNUBI,KD1,PGPBI,KDADD,LDZON,&
(    3) & LDBOYD,KDBOYD,PLBOYD,PBIPOUT)
(    4) USE PARKIND1 ,ONLY : JPIM ,JPRB
(    5) INTEGER(KIND=JPIM),INTENT(IN) :: KNUBI
(    6) INTEGER(KIND=JPIM),INTENT(IN) :: KD1
(    7) INTEGER(KIND=JPIM),INTENT(IN) :: KDLUX
(    8) INTEGER(KIND=JPIM),INTENT(IN) :: KDGUX
(    9) INTEGER(KIND=JPIM),INTENT(IN) :: KDLON
(   10) INTEGER(KIND=JPIM),INTENT(IN) :: KDGL
(   11) INTEGER(KIND=JPIM),INTENT(IN) :: KDADD
(   12) REAL(KIND=JPRB) ,INTENT(INOUT):: PGPBI(KD1,KNUBI)
(   13) LOGICAL, OPTIONAL ,INTENT(IN) :: LDZON
(   14) LOGICAL, OPTIONAL ,INTENT(IN) :: LDBOYD
(   15) INTEGER(KIND=JPIM), INTENT(IN), OPTIONAL :: KDBOYD(6)
(   16) REAL(KIND=JPRB)   , INTENT(IN), OPTIONAL :: PLBOYD
(   17) REAL(KIND=JPRB)   ,INTENT(OUT), OPTIONAL :: PBIPOUT(:,:)
(   18) END SUBROUTINE FPBIPERE
(   19) END INTERFACE
(   20) # 55 "test_Biper.F90"
(   55) # 55 "test_Biper.F90"
(   55) # 1 ".D[5]/horiz_field.h"
(    1) INTERFACE
(    2) SUBROUTINE HORIZ_FIELD(KX,KY,PHFIELD)
(    3) # 4 ".D[5]/horiz_field.h"
(    4) USE PARKIND1  ,ONLY : JPIM     ,JPRB
(    5) # 6 ".D[5]/horiz_field.h"
(    6) IMPLICIT NONE
(    7) # 8 ".D[5]/horiz_field.h"
(    8) INTEGER(KIND=JPIM),   INTENT(IN)    :: KX
(    9) INTEGER(KIND=JPIM),   INTENT(IN)    :: KY
(   10) REAL(KIND=JPRB),      INTENT(OUT)   :: PHFIELD(KX,KY)
(   11) REAL(KIND=JPRB),      PARAMETER     :: PPI=3.141592
(   12) END SUBROUTINE HORIZ_FIELD
(   13) END INTERFACE
(   14) # 56 "test_Biper.F90"
(   56) # 57 "test_Biper.F90"






NVFORTRAN (Version    20.11)          02/16/2022  17:27:31      page 7

(   57) ! ------------------------------------------------------------------
(   58) # 59 "test_Biper.F90"
(   59) !* 1. Initialization.
(   60) # 61 "test_Biper.F90"
(   61) !* 1.1 Grindpoint common
(   62) ! -----------------------------
(   63) # 64 "test_Biper.F90"
(   64) NNUBI=2
(   65) NSTART=1
(   66) NDLSM=288
(   67) NDLON=288
(   68) NDGL=288
(   69) NDLUX=266  
(   70) NDGUX=266 
(   71) LBIPX=.TRUE. 
(   72) !LBIPX=.FALSE. 
(   73) LBIPY=.TRUE. 
(   74) !LBIPY=.FALSE. 
(   75) LNZON=.FALSE.
(   76) !LNZON=.TRUE.
(   77) IADD=1 ! test spline
(   78) # 82 "test_Biper.F90"
(   82) !* 1.1 Read input field.
(   83) ! -----------------------------
(   84) !Field is read for C+I+E
(   85) ALLOCATE(HFIELD(NDLON,NDGL))
(   86) # 87 "test_Biper.F90"
(   87) CALL HORIZ_FIELD(NDLON,NDGL,HFIELD)
(   88) # 89 "test_Biper.F90"
(   89) !* 1.2 Field for ETIBIHI.
(   90) ! ----------------------------- 
(   91) # 92 "test_Biper.F90"
(   92) ALLOCATE(GPBI(NDLON+IADD,NNUBI,NDGL+IADD)) 
(   93) # 94 "test_Biper.F90"
(   94) !change layout
(   95) DO JLEV=1,NNUBI 
(   96)   DO JY=1,NDGL
(   97)     DO JX=1,NDLON
(   98)       GPBI(JX,JLEV,JY)=HFIELD(JX,JY)
(   99)     ENDDO
(  100)   ENDDO
(  101) ENDDO
(  102) # 104 "test_Biper.F90"
(  104) !* 1.3 Field for FPBIPER.
(  105) ! -----------------------------
(  106) # 107 "test_Biper.F90"
(  107) !It's same field horizontal fild in different layout
(  108) !depending on assumption that we have field on C U I U E or 
(  109) !C U I. It is done for testing purposes because FBIPER takes
(  110) !both kinds of inputs.
(  111) ND1=(NDGL+IADD)*(NDLON+IADD)
(  112) IF(LNZON) THEN
(  113)   IENDX=NDLON
(  114)   IENDY=NDGL
(  115) ELSE
(  116)   IENDX=NDLUX
(  117)   IENDY=NDGUX
(  118) ENDIF






NVFORTRAN (Version    20.11)          02/16/2022  17:27:31      page 8

(  119) # 121 "test_Biper.F90"
(  121) ALLOCATE(GGPBI(ND1,NNUBI)) !first dimension of GGPBI must always be NDGL*NDLON,
(  122) !because output from FPBIPER is always on C U I U E
(  123) !change of layout
(  124) DO JLEV=1,NNUBI
(  125)   ISTAE=0
(  126)   DO JY=1,IENDY
(  127)     DO JX=1,IENDX
(  128)       GGPBI(ISTAE+JX,JLEV)=HFIELD(JX,JY)
(  129)     ENDDO
(  130)     ISTAE=ISTAE+IENDX
(  131)   ENDDO
(  132) ENDDO
(  133) # 135 "test_Biper.F90"
(  135) ! ------------------------------------------------------------------
(  136) # 137 "test_Biper.F90"
(  137) !* 2. ETIBIHIE test
(  138) # 139 "test_Biper.F90"
(  139) ! -----------------------------
(  140) # 141 "test_Biper.F90"
(  141) WRITE(*,*) " "
(  142) WRITE(*,*) "Test of external program ETIBIHIE ... "
(  143) # 144 "test_Biper.F90"
(  144) CALL ETIBIHIE(NDLON,NDGL,NNUBI,NDLUX,NDGUX,NSTART,NDLSM,GPBI,LBIPX,LBIPY,IADD) 
(  145) # 146 "test_Biper.F90"
(  146) OPEN(UNIT=10,FILE="etibihi_test.txt",STATUS='REPLACE',POSITION='APPEND')
(  147) # 148 "test_Biper.F90"
(  148) DO JLEV=1,NNUBI
(  149) WRITE(10,*) "******* Left(NDLUN) - right(NDLON+1) border  *******"
(  150)  DO JY=1,NDGL
(  151)    WRITE(10,FMT='(F12.4)') GPBI(1,JLEV,JY)-GPBI(NDLON+IADD,JLEV,JY)  
(  152)  ENDDO
(  153) # 154 "test_Biper.F90"
(  154)  WRITE(10,*) "******* Bottom(NDGUN) - top(NDGL+1) border  *******"
(  155)  DO JX=1,NDLON
(  156)    WRITE(10,FMT='(F12.4)') GPBI(JX,JLEV,1)-GPBI(JX,JLEV,NDGL+IADD)  
(  157)  ENDDO
(  158) ENDDO
(  159) WRITE(*,*) "Output from ETIBIHIE test written in file etibihi_test.txt."
(  160) # 161 "test_Biper.F90"
(  161) ! ------------------------------------------------------------------
(  162) # 163 "test_Biper.F90"
(  163) !* 3. FBIPERE test
(  164) # 165 "test_Biper.F90"
(  165) ! -----------------------------
(  166) # 167 "test_Biper.F90"
(  167) WRITE(*,*) " "
(  168) WRITE(*,*) "Test of external program FPBIPERE ... "
(  169) # 170 "test_Biper.F90"
(  170) CALL FPBIPERE(NDLUX,NDGUX,NDLON,NDGL,NNUBI,ND1,GGPBI,IADD,LNZON)
(  171) # 172 "test_Biper.F90"
(  172) OPEN(UNIT=11,FILE="fpbiper_test.txt",STATUS='REPLACE',POSITION='APPEND')
(  173) # 174 "test_Biper.F90"
(  174) DO JLEV=1,NNUBI
(  175) WRITE(11,*) "******* Left(NDLUN) - right(NDLON+1) border  *******"
(  176) ISTAE=1
(  177)  DO JY=1,NDGL
(  178)   WRITE(11,FMT='(F12.4)') GGPBI(ISTAE,JLEV)-GGPBI(ISTAE+NDLON,JLEV)






NVFORTRAN (Version    20.11)          02/16/2022  17:27:31      page 9

(  179)   ISTAE=ISTAE+NDLON+IADD
(  180)  ENDDO
(  181) # 182 "test_Biper.F90"
(  182)  WRITE(11,*) "******* Bottom(NDGUN) - top(NDGL+1) border  *******"
(  183)  DO JX=1,NDLON
(  184)   WRITE(11,FMT='(F12.4)') GGPBI(JX,JLEV)-GGPBI(ND1-NDLON-IADD+JX,JLEV)
(  185)  ENDDO
(  186) ENDDO
(  187) WRITE(*,*) "Output from FPBIPER written in file fpbiper_test.txt."
(  188) # 189 "test_Biper.F90"
(  189) END PROGRAM TEST_BIPER
